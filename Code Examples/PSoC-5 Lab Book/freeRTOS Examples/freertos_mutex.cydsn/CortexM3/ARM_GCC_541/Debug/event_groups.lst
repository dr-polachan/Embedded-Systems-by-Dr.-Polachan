ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"event_groups.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTestWaitCondition,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	prvTestWaitCondition, %function
  24              	prvTestWaitCondition:
  25              	.LFB77:
  26              		.file 1 "..\\FreeRTOS\\Source\\event_groups.c"
   1:..\FreeRTOS\Source/event_groups.c **** /*
   2:..\FreeRTOS\Source/event_groups.c ****  * FreeRTOS Kernel V10.2.0
   3:..\FreeRTOS\Source/event_groups.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/event_groups.c ****  *
   5:..\FreeRTOS\Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/event_groups.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/event_groups.c ****  *
  12:..\FreeRTOS\Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/event_groups.c ****  *
  15:..\FreeRTOS\Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/event_groups.c ****  *
  22:..\FreeRTOS\Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source/event_groups.c ****  *
  25:..\FreeRTOS\Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source/event_groups.c ****  */
  27:..\FreeRTOS\Source/event_groups.c **** 
  28:..\FreeRTOS\Source/event_groups.c **** /* Standard includes. */
  29:..\FreeRTOS\Source/event_groups.c **** #include <stdlib.h>
  30:..\FreeRTOS\Source/event_groups.c **** 
  31:..\FreeRTOS\Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 2


  32:..\FreeRTOS\Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:..\FreeRTOS\Source/event_groups.c **** task.h is included from an application file. */
  34:..\FreeRTOS\Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:..\FreeRTOS\Source/event_groups.c **** 
  36:..\FreeRTOS\Source/event_groups.c **** /* FreeRTOS includes. */
  37:..\FreeRTOS\Source/event_groups.c **** #include "FreeRTOS.h"
  38:..\FreeRTOS\Source/event_groups.c **** #include "task.h"
  39:..\FreeRTOS\Source/event_groups.c **** #include "timers.h"
  40:..\FreeRTOS\Source/event_groups.c **** #include "event_groups.h"
  41:..\FreeRTOS\Source/event_groups.c **** 
  42:..\FreeRTOS\Source/event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  43:..\FreeRTOS\Source/event_groups.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:..\FreeRTOS\Source/event_groups.c **** for the header files above, but not in this file, in order to generate the
  45:..\FreeRTOS\Source/event_groups.c **** correct privileged Vs unprivileged linkage and placement. */
  46:..\FreeRTOS\Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  47:..\FreeRTOS\Source/event_groups.c **** 
  48:..\FreeRTOS\Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:..\FreeRTOS\Source/event_groups.c **** item value.  It is important they don't clash with the
  50:..\FreeRTOS\Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:..\FreeRTOS\Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:..\FreeRTOS\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:..\FreeRTOS\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:..\FreeRTOS\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:..\FreeRTOS\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:..\FreeRTOS\Source/event_groups.c **** #else
  57:..\FreeRTOS\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:..\FreeRTOS\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:..\FreeRTOS\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:..\FreeRTOS\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:..\FreeRTOS\Source/event_groups.c **** #endif
  62:..\FreeRTOS\Source/event_groups.c **** 
  63:..\FreeRTOS\Source/event_groups.c **** typedef struct EventGroupDef_t
  64:..\FreeRTOS\Source/event_groups.c **** {
  65:..\FreeRTOS\Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:..\FreeRTOS\Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:..\FreeRTOS\Source/event_groups.c **** 
  68:..\FreeRTOS\Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:..\FreeRTOS\Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:..\FreeRTOS\Source/event_groups.c **** 	#endif
  71:..\FreeRTOS\Source/event_groups.c **** 
  72:..\FreeRTOS\Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:..\FreeRTOS\Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:..\FreeRTOS\Source/event_groups.c **** 	#endif
  75:..\FreeRTOS\Source/event_groups.c **** } EventGroup_t;
  76:..\FreeRTOS\Source/event_groups.c **** 
  77:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:..\FreeRTOS\Source/event_groups.c **** 
  79:..\FreeRTOS\Source/event_groups.c **** /*
  80:..\FreeRTOS\Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:..\FreeRTOS\Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:..\FreeRTOS\Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:..\FreeRTOS\Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:..\FreeRTOS\Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:..\FreeRTOS\Source/event_groups.c ****  * in uxCurrentEventBits.
  86:..\FreeRTOS\Source/event_groups.c ****  */
  87:..\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 3


  89:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
  90:..\FreeRTOS\Source/event_groups.c **** 
  91:..\FreeRTOS\Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:..\FreeRTOS\Source/event_groups.c **** 
  93:..\FreeRTOS\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:..\FreeRTOS\Source/event_groups.c **** 	{
  95:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  96:..\FreeRTOS\Source/event_groups.c **** 
  97:..\FreeRTOS\Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  99:..\FreeRTOS\Source/event_groups.c **** 
 100:..\FreeRTOS\Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:..\FreeRTOS\Source/event_groups.c **** 		{
 102:..\FreeRTOS\Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:..\FreeRTOS\Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:..\FreeRTOS\Source/event_groups.c **** 			event group structure. */
 105:..\FreeRTOS\Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
 106:..\FreeRTOS\Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
 107:..\FreeRTOS\Source/event_groups.c **** 		} /*lint !e529 xSize is referenced if configASSERT() is defined. */
 108:..\FreeRTOS\Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:..\FreeRTOS\Source/event_groups.c **** 
 110:..\FreeRTOS\Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and StaticE
 112:..\FreeRTOS\Source/event_groups.c **** 
 113:..\FreeRTOS\Source/event_groups.c **** 		if( pxEventBits != NULL )
 114:..\FreeRTOS\Source/event_groups.c **** 		{
 115:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 116:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 117:..\FreeRTOS\Source/event_groups.c **** 
 118:..\FreeRTOS\Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:..\FreeRTOS\Source/event_groups.c **** 			{
 120:..\FreeRTOS\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:..\FreeRTOS\Source/event_groups.c **** 				this event group was created statically in case the event group
 122:..\FreeRTOS\Source/event_groups.c **** 				is later deleted. */
 123:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 124:..\FreeRTOS\Source/event_groups.c **** 			}
 125:..\FreeRTOS\Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:..\FreeRTOS\Source/event_groups.c **** 
 127:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:..\FreeRTOS\Source/event_groups.c **** 		}
 129:..\FreeRTOS\Source/event_groups.c **** 		else
 130:..\FreeRTOS\Source/event_groups.c **** 		{
 131:..\FreeRTOS\Source/event_groups.c **** 			/* xEventGroupCreateStatic should only ever be called with
 132:..\FreeRTOS\Source/event_groups.c **** 			pxEventGroupBuffer pointing to a pre-allocated (compile time
 133:..\FreeRTOS\Source/event_groups.c **** 			allocated) StaticEventGroup_t variable. */
 134:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 135:..\FreeRTOS\Source/event_groups.c **** 		}
 136:..\FreeRTOS\Source/event_groups.c **** 
 137:..\FreeRTOS\Source/event_groups.c **** 		return pxEventBits;
 138:..\FreeRTOS\Source/event_groups.c **** 	}
 139:..\FreeRTOS\Source/event_groups.c **** 
 140:..\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 141:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 142:..\FreeRTOS\Source/event_groups.c **** 
 143:..\FreeRTOS\Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 144:..\FreeRTOS\Source/event_groups.c **** 
 145:..\FreeRTOS\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 4


 146:..\FreeRTOS\Source/event_groups.c **** 	{
 147:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 148:..\FreeRTOS\Source/event_groups.c **** 
 149:..\FreeRTOS\Source/event_groups.c **** 		/* Allocate the event group.  Justification for MISRA deviation as
 150:..\FreeRTOS\Source/event_groups.c **** 		follows:  pvPortMalloc() always ensures returned memory blocks are
 151:..\FreeRTOS\Source/event_groups.c **** 		aligned per the requirements of the MCU stack.  In this case
 152:..\FreeRTOS\Source/event_groups.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 153:..\FreeRTOS\Source/event_groups.c **** 		alignment requirements of the EventGroup_t structure - which (if you
 154:..\FreeRTOS\Source/event_groups.c **** 		follow it through) is the alignment requirements of the TickType_t type
 155:..\FreeRTOS\Source/event_groups.c **** 		(EventBits_t being of TickType_t itself).  Therefore, whenever the
 156:..\FreeRTOS\Source/event_groups.c **** 		stack alignment requirements are greater than or equal to the
 157:..\FreeRTOS\Source/event_groups.c **** 		TickType_t alignment requirements the cast is safe.  In other cases,
 158:..\FreeRTOS\Source/event_groups.c **** 		where the natural word size of the architecture is less than
 159:..\FreeRTOS\Source/event_groups.c **** 		sizeof( TickType_t ), the TickType_t variables will be accessed in two
 160:..\FreeRTOS\Source/event_groups.c **** 		or more reads operations, and the alignment requirements is only that
 161:..\FreeRTOS\Source/event_groups.c **** 		of each individual read. */
 162:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see
 163:..\FreeRTOS\Source/event_groups.c **** 
 164:..\FreeRTOS\Source/event_groups.c **** 		if( pxEventBits != NULL )
 165:..\FreeRTOS\Source/event_groups.c **** 		{
 166:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 167:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 168:..\FreeRTOS\Source/event_groups.c **** 
 169:..\FreeRTOS\Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 170:..\FreeRTOS\Source/event_groups.c **** 			{
 171:..\FreeRTOS\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 172:..\FreeRTOS\Source/event_groups.c **** 				event group was allocated statically in case the event group is
 173:..\FreeRTOS\Source/event_groups.c **** 				later deleted. */
 174:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 175:..\FreeRTOS\Source/event_groups.c **** 			}
 176:..\FreeRTOS\Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 177:..\FreeRTOS\Source/event_groups.c **** 
 178:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 179:..\FreeRTOS\Source/event_groups.c **** 		}
 180:..\FreeRTOS\Source/event_groups.c **** 		else
 181:..\FreeRTOS\Source/event_groups.c **** 		{
 182:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and doe
 183:..\FreeRTOS\Source/event_groups.c **** 		}
 184:..\FreeRTOS\Source/event_groups.c **** 
 185:..\FreeRTOS\Source/event_groups.c **** 		return pxEventBits;
 186:..\FreeRTOS\Source/event_groups.c **** 	}
 187:..\FreeRTOS\Source/event_groups.c **** 
 188:..\FreeRTOS\Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 189:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source/event_groups.c **** 
 191:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 192:..\FreeRTOS\Source/event_groups.c **** {
 193:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 194:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 195:..\FreeRTOS\Source/event_groups.c **** BaseType_t xAlreadyYielded;
 196:..\FreeRTOS\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 197:..\FreeRTOS\Source/event_groups.c **** 
 198:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 199:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 200:..\FreeRTOS\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 201:..\FreeRTOS\Source/event_groups.c **** 	{
 202:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 5


 203:..\FreeRTOS\Source/event_groups.c **** 	}
 204:..\FreeRTOS\Source/event_groups.c **** 	#endif
 205:..\FreeRTOS\Source/event_groups.c **** 
 206:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 207:..\FreeRTOS\Source/event_groups.c **** 	{
 208:..\FreeRTOS\Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 209:..\FreeRTOS\Source/event_groups.c **** 
 210:..\FreeRTOS\Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 211:..\FreeRTOS\Source/event_groups.c **** 
 212:..\FreeRTOS\Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 213:..\FreeRTOS\Source/event_groups.c **** 		{
 214:..\FreeRTOS\Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 215:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 216:..\FreeRTOS\Source/event_groups.c **** 
 217:..\FreeRTOS\Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 218:..\FreeRTOS\Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 219:..\FreeRTOS\Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 220:..\FreeRTOS\Source/event_groups.c **** 
 221:..\FreeRTOS\Source/event_groups.c **** 			xTicksToWait = 0;
 222:..\FreeRTOS\Source/event_groups.c **** 		}
 223:..\FreeRTOS\Source/event_groups.c **** 		else
 224:..\FreeRTOS\Source/event_groups.c **** 		{
 225:..\FreeRTOS\Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 226:..\FreeRTOS\Source/event_groups.c **** 			{
 227:..\FreeRTOS\Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 228:..\FreeRTOS\Source/event_groups.c **** 
 229:..\FreeRTOS\Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 230:..\FreeRTOS\Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 231:..\FreeRTOS\Source/event_groups.c **** 				found.  Then enter the blocked state. */
 232:..\FreeRTOS\Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 233:..\FreeRTOS\Source/event_groups.c **** 
 234:..\FreeRTOS\Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 235:..\FreeRTOS\Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 236:..\FreeRTOS\Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 237:..\FreeRTOS\Source/event_groups.c **** 				assignment is omitted. */
 238:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = 0;
 239:..\FreeRTOS\Source/event_groups.c **** 			}
 240:..\FreeRTOS\Source/event_groups.c **** 			else
 241:..\FreeRTOS\Source/event_groups.c **** 			{
 242:..\FreeRTOS\Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 243:..\FreeRTOS\Source/event_groups.c **** 				specified - just return the current event bit value. */
 244:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 245:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 246:..\FreeRTOS\Source/event_groups.c **** 			}
 247:..\FreeRTOS\Source/event_groups.c **** 		}
 248:..\FreeRTOS\Source/event_groups.c **** 	}
 249:..\FreeRTOS\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 250:..\FreeRTOS\Source/event_groups.c **** 
 251:..\FreeRTOS\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 252:..\FreeRTOS\Source/event_groups.c **** 	{
 253:..\FreeRTOS\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 254:..\FreeRTOS\Source/event_groups.c **** 		{
 255:..\FreeRTOS\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 256:..\FreeRTOS\Source/event_groups.c **** 		}
 257:..\FreeRTOS\Source/event_groups.c **** 		else
 258:..\FreeRTOS\Source/event_groups.c **** 		{
 259:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 6


 260:..\FreeRTOS\Source/event_groups.c **** 		}
 261:..\FreeRTOS\Source/event_groups.c **** 
 262:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 263:..\FreeRTOS\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 264:..\FreeRTOS\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 265:..\FreeRTOS\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 266:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 267:..\FreeRTOS\Source/event_groups.c **** 
 268:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 269:..\FreeRTOS\Source/event_groups.c **** 		{
 270:..\FreeRTOS\Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 271:..\FreeRTOS\Source/event_groups.c **** 			taskENTER_CRITICAL();
 272:..\FreeRTOS\Source/event_groups.c **** 			{
 273:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 274:..\FreeRTOS\Source/event_groups.c **** 
 275:..\FreeRTOS\Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 276:..\FreeRTOS\Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 277:..\FreeRTOS\Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 278:..\FreeRTOS\Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 279:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 280:..\FreeRTOS\Source/event_groups.c **** 				{
 281:..\FreeRTOS\Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 282:..\FreeRTOS\Source/event_groups.c **** 				}
 283:..\FreeRTOS\Source/event_groups.c **** 				else
 284:..\FreeRTOS\Source/event_groups.c **** 				{
 285:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 286:..\FreeRTOS\Source/event_groups.c **** 				}
 287:..\FreeRTOS\Source/event_groups.c **** 			}
 288:..\FreeRTOS\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 289:..\FreeRTOS\Source/event_groups.c **** 
 290:..\FreeRTOS\Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 291:..\FreeRTOS\Source/event_groups.c **** 		}
 292:..\FreeRTOS\Source/event_groups.c **** 		else
 293:..\FreeRTOS\Source/event_groups.c **** 		{
 294:..\FreeRTOS\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 295:..\FreeRTOS\Source/event_groups.c **** 		}
 296:..\FreeRTOS\Source/event_groups.c **** 
 297:..\FreeRTOS\Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 298:..\FreeRTOS\Source/event_groups.c **** 		returned. */
 299:..\FreeRTOS\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 300:..\FreeRTOS\Source/event_groups.c **** 	}
 301:..\FreeRTOS\Source/event_groups.c **** 
 302:..\FreeRTOS\Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 303:..\FreeRTOS\Source/event_groups.c **** 
 304:..\FreeRTOS\Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 305:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 306:..\FreeRTOS\Source/event_groups.c **** 
 307:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 308:..\FreeRTOS\Source/event_groups.c **** }
 309:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 310:..\FreeRTOS\Source/event_groups.c **** 
 311:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 312:..\FreeRTOS\Source/event_groups.c **** {
 313:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 314:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 315:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 316:..\FreeRTOS\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 7


 317:..\FreeRTOS\Source/event_groups.c **** 
 318:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 319:..\FreeRTOS\Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 320:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 321:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 322:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 323:..\FreeRTOS\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 324:..\FreeRTOS\Source/event_groups.c **** 	{
 325:..\FreeRTOS\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 326:..\FreeRTOS\Source/event_groups.c **** 	}
 327:..\FreeRTOS\Source/event_groups.c **** 	#endif
 328:..\FreeRTOS\Source/event_groups.c **** 
 329:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 330:..\FreeRTOS\Source/event_groups.c **** 	{
 331:..\FreeRTOS\Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 332:..\FreeRTOS\Source/event_groups.c **** 
 333:..\FreeRTOS\Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 334:..\FreeRTOS\Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 335:..\FreeRTOS\Source/event_groups.c **** 
 336:..\FreeRTOS\Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 337:..\FreeRTOS\Source/event_groups.c **** 		{
 338:..\FreeRTOS\Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 339:..\FreeRTOS\Source/event_groups.c **** 			block. */
 340:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 341:..\FreeRTOS\Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 342:..\FreeRTOS\Source/event_groups.c **** 
 343:..\FreeRTOS\Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 344:..\FreeRTOS\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 345:..\FreeRTOS\Source/event_groups.c **** 			{
 346:..\FreeRTOS\Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 347:..\FreeRTOS\Source/event_groups.c **** 			}
 348:..\FreeRTOS\Source/event_groups.c **** 			else
 349:..\FreeRTOS\Source/event_groups.c **** 			{
 350:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 351:..\FreeRTOS\Source/event_groups.c **** 			}
 352:..\FreeRTOS\Source/event_groups.c **** 		}
 353:..\FreeRTOS\Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 354:..\FreeRTOS\Source/event_groups.c **** 		{
 355:..\FreeRTOS\Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 356:..\FreeRTOS\Source/event_groups.c **** 			specified, so just return the current value. */
 357:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 358:..\FreeRTOS\Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 359:..\FreeRTOS\Source/event_groups.c **** 		}
 360:..\FreeRTOS\Source/event_groups.c **** 		else
 361:..\FreeRTOS\Source/event_groups.c **** 		{
 362:..\FreeRTOS\Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 363:..\FreeRTOS\Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 364:..\FreeRTOS\Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 365:..\FreeRTOS\Source/event_groups.c **** 			unblock the task. */
 366:..\FreeRTOS\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 367:..\FreeRTOS\Source/event_groups.c **** 			{
 368:..\FreeRTOS\Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 369:..\FreeRTOS\Source/event_groups.c **** 			}
 370:..\FreeRTOS\Source/event_groups.c **** 			else
 371:..\FreeRTOS\Source/event_groups.c **** 			{
 372:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 373:..\FreeRTOS\Source/event_groups.c **** 			}
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 8


 374:..\FreeRTOS\Source/event_groups.c **** 
 375:..\FreeRTOS\Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 376:..\FreeRTOS\Source/event_groups.c **** 			{
 377:..\FreeRTOS\Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 378:..\FreeRTOS\Source/event_groups.c **** 			}
 379:..\FreeRTOS\Source/event_groups.c **** 			else
 380:..\FreeRTOS\Source/event_groups.c **** 			{
 381:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 382:..\FreeRTOS\Source/event_groups.c **** 			}
 383:..\FreeRTOS\Source/event_groups.c **** 
 384:..\FreeRTOS\Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 385:..\FreeRTOS\Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 386:..\FreeRTOS\Source/event_groups.c **** 			found.  Then enter the blocked state. */
 387:..\FreeRTOS\Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 388:..\FreeRTOS\Source/event_groups.c **** 
 389:..\FreeRTOS\Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 390:..\FreeRTOS\Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 391:..\FreeRTOS\Source/event_groups.c **** 			being returned without being set if it is not done. */
 392:..\FreeRTOS\Source/event_groups.c **** 			uxReturn = 0;
 393:..\FreeRTOS\Source/event_groups.c **** 
 394:..\FreeRTOS\Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 395:..\FreeRTOS\Source/event_groups.c **** 		}
 396:..\FreeRTOS\Source/event_groups.c **** 	}
 397:..\FreeRTOS\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 398:..\FreeRTOS\Source/event_groups.c **** 
 399:..\FreeRTOS\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 400:..\FreeRTOS\Source/event_groups.c **** 	{
 401:..\FreeRTOS\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 402:..\FreeRTOS\Source/event_groups.c **** 		{
 403:..\FreeRTOS\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 404:..\FreeRTOS\Source/event_groups.c **** 		}
 405:..\FreeRTOS\Source/event_groups.c **** 		else
 406:..\FreeRTOS\Source/event_groups.c **** 		{
 407:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 408:..\FreeRTOS\Source/event_groups.c **** 		}
 409:..\FreeRTOS\Source/event_groups.c **** 
 410:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 411:..\FreeRTOS\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 412:..\FreeRTOS\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 413:..\FreeRTOS\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 414:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 415:..\FreeRTOS\Source/event_groups.c **** 
 416:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 417:..\FreeRTOS\Source/event_groups.c **** 		{
 418:..\FreeRTOS\Source/event_groups.c **** 			taskENTER_CRITICAL();
 419:..\FreeRTOS\Source/event_groups.c **** 			{
 420:..\FreeRTOS\Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 421:..\FreeRTOS\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 422:..\FreeRTOS\Source/event_groups.c **** 
 423:..\FreeRTOS\Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 424:..\FreeRTOS\Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 425:..\FreeRTOS\Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 426:..\FreeRTOS\Source/event_groups.c **** 				{
 427:..\FreeRTOS\Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 428:..\FreeRTOS\Source/event_groups.c **** 					{
 429:..\FreeRTOS\Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 430:..\FreeRTOS\Source/event_groups.c **** 					}
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 9


 431:..\FreeRTOS\Source/event_groups.c **** 					else
 432:..\FreeRTOS\Source/event_groups.c **** 					{
 433:..\FreeRTOS\Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 434:..\FreeRTOS\Source/event_groups.c **** 					}
 435:..\FreeRTOS\Source/event_groups.c **** 				}
 436:..\FreeRTOS\Source/event_groups.c **** 				else
 437:..\FreeRTOS\Source/event_groups.c **** 				{
 438:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 439:..\FreeRTOS\Source/event_groups.c **** 				}
 440:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 441:..\FreeRTOS\Source/event_groups.c **** 			}
 442:..\FreeRTOS\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 443:..\FreeRTOS\Source/event_groups.c **** 		}
 444:..\FreeRTOS\Source/event_groups.c **** 		else
 445:..\FreeRTOS\Source/event_groups.c **** 		{
 446:..\FreeRTOS\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 447:..\FreeRTOS\Source/event_groups.c **** 		}
 448:..\FreeRTOS\Source/event_groups.c **** 
 449:..\FreeRTOS\Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 450:..\FreeRTOS\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 451:..\FreeRTOS\Source/event_groups.c **** 	}
 452:..\FreeRTOS\Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 453:..\FreeRTOS\Source/event_groups.c **** 
 454:..\FreeRTOS\Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 455:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 456:..\FreeRTOS\Source/event_groups.c **** 
 457:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 458:..\FreeRTOS\Source/event_groups.c **** }
 459:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 460:..\FreeRTOS\Source/event_groups.c **** 
 461:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 462:..\FreeRTOS\Source/event_groups.c **** {
 463:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 464:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn;
 465:..\FreeRTOS\Source/event_groups.c **** 
 466:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 467:..\FreeRTOS\Source/event_groups.c **** 	itself. */
 468:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 469:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 470:..\FreeRTOS\Source/event_groups.c **** 
 471:..\FreeRTOS\Source/event_groups.c **** 	taskENTER_CRITICAL();
 472:..\FreeRTOS\Source/event_groups.c **** 	{
 473:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 474:..\FreeRTOS\Source/event_groups.c **** 
 475:..\FreeRTOS\Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 476:..\FreeRTOS\Source/event_groups.c **** 		cleared. */
 477:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 478:..\FreeRTOS\Source/event_groups.c **** 
 479:..\FreeRTOS\Source/event_groups.c **** 		/* Clear the bits. */
 480:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 481:..\FreeRTOS\Source/event_groups.c **** 	}
 482:..\FreeRTOS\Source/event_groups.c **** 	taskEXIT_CRITICAL();
 483:..\FreeRTOS\Source/event_groups.c **** 
 484:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 485:..\FreeRTOS\Source/event_groups.c **** }
 486:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 10


 488:..\FreeRTOS\Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 489:..\FreeRTOS\Source/event_groups.c **** 
 490:..\FreeRTOS\Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 491:..\FreeRTOS\Source/event_groups.c **** 	{
 492:..\FreeRTOS\Source/event_groups.c **** 		BaseType_t xReturn;
 493:..\FreeRTOS\Source/event_groups.c **** 
 494:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 495:..\FreeRTOS\Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 496:..\FreeRTOS\Source/event_groups.c **** 
 497:..\FreeRTOS\Source/event_groups.c **** 		return xReturn;
 498:..\FreeRTOS\Source/event_groups.c **** 	}
 499:..\FreeRTOS\Source/event_groups.c **** 
 500:..\FreeRTOS\Source/event_groups.c **** #endif
 501:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 502:..\FreeRTOS\Source/event_groups.c **** 
 503:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 504:..\FreeRTOS\Source/event_groups.c **** {
 505:..\FreeRTOS\Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 506:..\FreeRTOS\Source/event_groups.c **** EventGroup_t const * const pxEventBits = xEventGroup;
 507:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxReturn;
 508:..\FreeRTOS\Source/event_groups.c **** 
 509:..\FreeRTOS\Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 510:..\FreeRTOS\Source/event_groups.c **** 	{
 511:..\FreeRTOS\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 512:..\FreeRTOS\Source/event_groups.c **** 	}
 513:..\FreeRTOS\Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 514:..\FreeRTOS\Source/event_groups.c **** 
 515:..\FreeRTOS\Source/event_groups.c **** 	return uxReturn;
 516:..\FreeRTOS\Source/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 517:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 518:..\FreeRTOS\Source/event_groups.c **** 
 519:..\FreeRTOS\Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 520:..\FreeRTOS\Source/event_groups.c **** {
 521:..\FreeRTOS\Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 522:..\FreeRTOS\Source/event_groups.c **** ListItem_t const *pxListEnd;
 523:..\FreeRTOS\Source/event_groups.c **** List_t const * pxList;
 524:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 525:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 526:..\FreeRTOS\Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 527:..\FreeRTOS\Source/event_groups.c **** 
 528:..\FreeRTOS\Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 529:..\FreeRTOS\Source/event_groups.c **** 	itself. */
 530:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( xEventGroup );
 531:..\FreeRTOS\Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 532:..\FreeRTOS\Source/event_groups.c **** 
 533:..\FreeRTOS\Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 534:..\FreeRTOS\Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is use
 535:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 536:..\FreeRTOS\Source/event_groups.c **** 	{
 537:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 538:..\FreeRTOS\Source/event_groups.c **** 
 539:..\FreeRTOS\Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 540:..\FreeRTOS\Source/event_groups.c **** 
 541:..\FreeRTOS\Source/event_groups.c **** 		/* Set the bits. */
 542:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 543:..\FreeRTOS\Source/event_groups.c **** 
 544:..\FreeRTOS\Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 11


 545:..\FreeRTOS\Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 546:..\FreeRTOS\Source/event_groups.c **** 		{
 547:..\FreeRTOS\Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 548:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 549:..\FreeRTOS\Source/event_groups.c **** 			xMatchFound = pdFALSE;
 550:..\FreeRTOS\Source/event_groups.c **** 
 551:..\FreeRTOS\Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 552:..\FreeRTOS\Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 553:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 554:..\FreeRTOS\Source/event_groups.c **** 
 555:..\FreeRTOS\Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 556:..\FreeRTOS\Source/event_groups.c **** 			{
 557:..\FreeRTOS\Source/event_groups.c **** 				/* Just looking for single bit being set. */
 558:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 559:..\FreeRTOS\Source/event_groups.c **** 				{
 560:..\FreeRTOS\Source/event_groups.c **** 					xMatchFound = pdTRUE;
 561:..\FreeRTOS\Source/event_groups.c **** 				}
 562:..\FreeRTOS\Source/event_groups.c **** 				else
 563:..\FreeRTOS\Source/event_groups.c **** 				{
 564:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 565:..\FreeRTOS\Source/event_groups.c **** 				}
 566:..\FreeRTOS\Source/event_groups.c **** 			}
 567:..\FreeRTOS\Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 568:..\FreeRTOS\Source/event_groups.c **** 			{
 569:..\FreeRTOS\Source/event_groups.c **** 				/* All bits are set. */
 570:..\FreeRTOS\Source/event_groups.c **** 				xMatchFound = pdTRUE;
 571:..\FreeRTOS\Source/event_groups.c **** 			}
 572:..\FreeRTOS\Source/event_groups.c **** 			else
 573:..\FreeRTOS\Source/event_groups.c **** 			{
 574:..\FreeRTOS\Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 575:..\FreeRTOS\Source/event_groups.c **** 			}
 576:..\FreeRTOS\Source/event_groups.c **** 
 577:..\FreeRTOS\Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 578:..\FreeRTOS\Source/event_groups.c **** 			{
 579:..\FreeRTOS\Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 580:..\FreeRTOS\Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 581:..\FreeRTOS\Source/event_groups.c **** 				{
 582:..\FreeRTOS\Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 583:..\FreeRTOS\Source/event_groups.c **** 				}
 584:..\FreeRTOS\Source/event_groups.c **** 				else
 585:..\FreeRTOS\Source/event_groups.c **** 				{
 586:..\FreeRTOS\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 587:..\FreeRTOS\Source/event_groups.c **** 				}
 588:..\FreeRTOS\Source/event_groups.c **** 
 589:..\FreeRTOS\Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 590:..\FreeRTOS\Source/event_groups.c **** 				item before removing the task from the event list.  The
 591:..\FreeRTOS\Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 592:..\FreeRTOS\Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 593:..\FreeRTOS\Source/event_groups.c **** 				than because it timed out. */
 594:..\FreeRTOS\Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 595:..\FreeRTOS\Source/event_groups.c **** 			}
 596:..\FreeRTOS\Source/event_groups.c **** 
 597:..\FreeRTOS\Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 598:..\FreeRTOS\Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 599:..\FreeRTOS\Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 600:..\FreeRTOS\Source/event_groups.c **** 			pxListItem = pxNext;
 601:..\FreeRTOS\Source/event_groups.c **** 		}
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 12


 602:..\FreeRTOS\Source/event_groups.c **** 
 603:..\FreeRTOS\Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 604:..\FreeRTOS\Source/event_groups.c **** 		bit was set in the control word. */
 605:..\FreeRTOS\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 606:..\FreeRTOS\Source/event_groups.c **** 	}
 607:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 608:..\FreeRTOS\Source/event_groups.c **** 
 609:..\FreeRTOS\Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 610:..\FreeRTOS\Source/event_groups.c **** }
 611:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 612:..\FreeRTOS\Source/event_groups.c **** 
 613:..\FreeRTOS\Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 614:..\FreeRTOS\Source/event_groups.c **** {
 615:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 616:..\FreeRTOS\Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 617:..\FreeRTOS\Source/event_groups.c **** 
 618:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
 619:..\FreeRTOS\Source/event_groups.c **** 	{
 620:..\FreeRTOS\Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 621:..\FreeRTOS\Source/event_groups.c **** 
 622:..\FreeRTOS\Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 623:..\FreeRTOS\Source/event_groups.c **** 		{
 624:..\FreeRTOS\Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 625:..\FreeRTOS\Source/event_groups.c **** 			and cannot therefore have any bits set. */
 626:..\FreeRTOS\Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 627:..\FreeRTOS\Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 628:..\FreeRTOS\Source/event_groups.c **** 		}
 629:..\FreeRTOS\Source/event_groups.c **** 
 630:..\FreeRTOS\Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 631:..\FreeRTOS\Source/event_groups.c **** 		{
 632:..\FreeRTOS\Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 633:..\FreeRTOS\Source/event_groups.c **** 			it again. */
 634:..\FreeRTOS\Source/event_groups.c **** 			vPortFree( pxEventBits );
 635:..\FreeRTOS\Source/event_groups.c **** 		}
 636:..\FreeRTOS\Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:..\FreeRTOS\Source/event_groups.c **** 		{
 638:..\FreeRTOS\Source/event_groups.c **** 			/* The event group could have been allocated statically or
 639:..\FreeRTOS\Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 640:..\FreeRTOS\Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 641:..\FreeRTOS\Source/event_groups.c **** 			{
 642:..\FreeRTOS\Source/event_groups.c **** 				vPortFree( pxEventBits );
 643:..\FreeRTOS\Source/event_groups.c **** 			}
 644:..\FreeRTOS\Source/event_groups.c **** 			else
 645:..\FreeRTOS\Source/event_groups.c **** 			{
 646:..\FreeRTOS\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 647:..\FreeRTOS\Source/event_groups.c **** 			}
 648:..\FreeRTOS\Source/event_groups.c **** 		}
 649:..\FreeRTOS\Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 650:..\FreeRTOS\Source/event_groups.c **** 	}
 651:..\FreeRTOS\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 652:..\FreeRTOS\Source/event_groups.c **** }
 653:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 654:..\FreeRTOS\Source/event_groups.c **** 
 655:..\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 656:..\FreeRTOS\Source/event_groups.c **** an interrupt. */
 657:..\FreeRTOS\Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 658:..\FreeRTOS\Source/event_groups.c **** {
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 13


 659:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 660:..\FreeRTOS\Source/event_groups.c **** }
 661:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 662:..\FreeRTOS\Source/event_groups.c **** 
 663:..\FreeRTOS\Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 664:..\FreeRTOS\Source/event_groups.c **** an interrupt. */
 665:..\FreeRTOS\Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 666:..\FreeRTOS\Source/event_groups.c **** {
 667:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 668:..\FreeRTOS\Source/event_groups.c **** }
 669:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 670:..\FreeRTOS\Source/event_groups.c **** 
 671:..\FreeRTOS\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 672:..\FreeRTOS\Source/event_groups.c **** {
  27              		.loc 1 672 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 673:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 674:..\FreeRTOS\Source/event_groups.c **** 
 675:..\FreeRTOS\Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 675 0
  34 0000 1AB9     		cbnz	r2, .L2
 676:..\FreeRTOS\Source/event_groups.c **** 	{
 677:..\FreeRTOS\Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 678:..\FreeRTOS\Source/event_groups.c **** 		set.  Is one already set? */
 679:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 679 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 673:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 673 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 680:..\FreeRTOS\Source/event_groups.c **** 		{
 681:..\FreeRTOS\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 682:..\FreeRTOS\Source/event_groups.c **** 		}
 683:..\FreeRTOS\Source/event_groups.c **** 		else
 684:..\FreeRTOS\Source/event_groups.c **** 		{
 685:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 686:..\FreeRTOS\Source/event_groups.c **** 		}
 687:..\FreeRTOS\Source/event_groups.c **** 	}
 688:..\FreeRTOS\Source/event_groups.c **** 	else
 689:..\FreeRTOS\Source/event_groups.c **** 	{
 690:..\FreeRTOS\Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 691:..\FreeRTOS\Source/event_groups.c **** 		Are they set already? */
 692:..\FreeRTOS\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 692 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 673:..\FreeRTOS\Source/event_groups.c **** 
  47              		.loc 1 673 0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 14


  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 681:..\FreeRTOS\Source/event_groups.c **** 		}
  53              		.loc 1 681 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 693:..\FreeRTOS\Source/event_groups.c **** 		{
 694:..\FreeRTOS\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
  59              		.loc 1 694 0
  60 0018 0120     		movs	r0, #1
  61              	.LVL7:
 695:..\FreeRTOS\Source/event_groups.c **** 		}
 696:..\FreeRTOS\Source/event_groups.c **** 		else
 697:..\FreeRTOS\Source/event_groups.c **** 		{
 698:..\FreeRTOS\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 699:..\FreeRTOS\Source/event_groups.c **** 		}
 700:..\FreeRTOS\Source/event_groups.c **** 	}
 701:..\FreeRTOS\Source/event_groups.c **** 
 702:..\FreeRTOS\Source/event_groups.c **** 	return xWaitConditionMet;
 703:..\FreeRTOS\Source/event_groups.c **** }
  62              		.loc 1 703 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE77:
  66              		.size	prvTestWaitCondition, .-prvTestWaitCondition
  67              		.section	.text.xEventGroupCreate,"ax",%progbits
  68              		.align	2
  69              		.global	xEventGroupCreate
  70              		.thumb
  71              		.thumb_func
  72              		.type	xEventGroupCreate, %function
  73              	xEventGroupCreate:
  74              	.LFB68:
 146:..\FreeRTOS\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  75              		.loc 1 146 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 162:..\FreeRTOS\Source/event_groups.c **** 
  83              		.loc 1 162 0
  84 0002 1820     		movs	r0, #24
  85 0004 FFF7FEFF 		bl	pvPortMalloc
  86              	.LVL8:
 164:..\FreeRTOS\Source/event_groups.c **** 		{
  87              		.loc 1 164 0
  88 0008 0446     		mov	r4, r0
  89 000a 20B1     		cbz	r0, .L7
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 15


 166:..\FreeRTOS\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  90              		.loc 1 166 0
  91 000c 0023     		movs	r3, #0
  92 000e 40F8043B 		str	r3, [r0], #4
  93              	.LVL9:
 167:..\FreeRTOS\Source/event_groups.c **** 
  94              		.loc 1 167 0
  95 0012 FFF7FEFF 		bl	vListInitialise
  96              	.LVL10:
  97              	.L7:
 186:..\FreeRTOS\Source/event_groups.c **** 
  98              		.loc 1 186 0
  99 0016 2046     		mov	r0, r4
 100 0018 10BD     		pop	{r4, pc}
 101              		.cfi_endproc
 102              	.LFE68:
 103              		.size	xEventGroupCreate, .-xEventGroupCreate
 104 001a 00BF     		.section	.text.xEventGroupWaitBits,"ax",%progbits
 105              		.align	2
 106              		.global	xEventGroupWaitBits
 107              		.thumb
 108              		.thumb_func
 109              		.type	xEventGroupWaitBits, %function
 110              	xEventGroupWaitBits:
 111              	.LFB70:
 312:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 112              		.loc 1 312 0
 113              		.cfi_startproc
 114              		@ args = 4, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL11:
 117 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 118              		.cfi_def_cfa_offset 32
 119              		.cfi_offset 3, -32
 120              		.cfi_offset 4, -28
 121              		.cfi_offset 5, -24
 122              		.cfi_offset 6, -20
 123              		.cfi_offset 7, -16
 124              		.cfi_offset 8, -12
 125              		.cfi_offset 9, -8
 126              		.cfi_offset 14, -4
 127 0004 0746     		mov	r7, r0
 128 0006 0E46     		mov	r6, r1
 129 0008 9146     		mov	r9, r2
 130 000a 9846     		mov	r8, r3
 131 000c 089D     		ldr	r5, [sp, #32]
 132              	.LVL12:
 329:..\FreeRTOS\Source/event_groups.c **** 	{
 133              		.loc 1 329 0
 134 000e FFF7FEFF 		bl	vTaskSuspendAll
 135              	.LVL13:
 136              	.LBB6:
 331:..\FreeRTOS\Source/event_groups.c **** 
 137              		.loc 1 331 0
 138 0012 3C68     		ldr	r4, [r7]
 139              	.LVL14:
 334:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 16


 140              		.loc 1 334 0
 141 0014 4246     		mov	r2, r8
 142 0016 3146     		mov	r1, r6
 143 0018 2046     		mov	r0, r4
 144 001a FFF7FEFF 		bl	prvTestWaitCondition
 145              	.LVL15:
 336:..\FreeRTOS\Source/event_groups.c **** 		{
 146              		.loc 1 336 0
 147 001e 38B1     		cbz	r0, .L10
 148              	.LVL16:
 344:..\FreeRTOS\Source/event_groups.c **** 			{
 149              		.loc 1 344 0
 150 0020 B9F1000F 		cmp	r9, #0
 151 0024 18D0     		beq	.L18
 346:..\FreeRTOS\Source/event_groups.c **** 			}
 152              		.loc 1 346 0
 153 0026 24EA0603 		bic	r3, r4, r6
 154 002a 3B60     		str	r3, [r7]
 341:..\FreeRTOS\Source/event_groups.c **** 
 155              		.loc 1 341 0
 156 002c 0025     		movs	r5, #0
 157 002e 14E0     		b	.L11
 158              	.LVL17:
 159              	.L10:
 353:..\FreeRTOS\Source/event_groups.c **** 		{
 160              		.loc 1 353 0
 161 0030 9DB1     		cbz	r5, .L11
 366:..\FreeRTOS\Source/event_groups.c **** 			{
 162              		.loc 1 366 0
 163 0032 B9F1000F 		cmp	r9, #0
 164 0036 01D1     		bne	.L19
 165              	.LBE6:
 314:..\FreeRTOS\Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 166              		.loc 1 314 0
 167 0038 0021     		movs	r1, #0
 168 003a 01E0     		b	.L12
 169              	.L19:
 170              	.LBB7:
 368:..\FreeRTOS\Source/event_groups.c **** 			}
 171              		.loc 1 368 0
 172 003c 4FF08071 		mov	r1, #16777216
 173              	.L12:
 174              	.LVL18:
 375:..\FreeRTOS\Source/event_groups.c **** 			{
 175              		.loc 1 375 0
 176 0040 B8F1000F 		cmp	r8, #0
 177 0044 01D0     		beq	.L13
 377:..\FreeRTOS\Source/event_groups.c **** 			}
 178              		.loc 1 377 0
 179 0046 41F08061 		orr	r1, r1, #67108864
 180              	.LVL19:
 181              	.L13:
 387:..\FreeRTOS\Source/event_groups.c **** 
 182              		.loc 1 387 0
 183 004a 2A46     		mov	r2, r5
 184 004c 3143     		orrs	r1, r1, r6
 185              	.LVL20:
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 17


 186 004e 381D     		adds	r0, r7, #4
 187              	.LVL21:
 188 0050 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 189              	.LVL22:
 392:..\FreeRTOS\Source/event_groups.c **** 
 190              		.loc 1 392 0
 191 0054 0024     		movs	r4, #0
 192              	.LVL23:
 193 0056 00E0     		b	.L11
 194              	.LVL24:
 195              	.L18:
 341:..\FreeRTOS\Source/event_groups.c **** 
 196              		.loc 1 341 0
 197 0058 0025     		movs	r5, #0
 198              	.LVL25:
 199              	.L11:
 200              	.LBE7:
 397:..\FreeRTOS\Source/event_groups.c **** 
 201              		.loc 1 397 0
 202 005a FFF7FEFF 		bl	xTaskResumeAll
 203              	.LVL26:
 399:..\FreeRTOS\Source/event_groups.c **** 	{
 204              		.loc 1 399 0
 205 005e 0DB3     		cbz	r5, .L14
 401:..\FreeRTOS\Source/event_groups.c **** 		{
 206              		.loc 1 401 0
 207 0060 38B9     		cbnz	r0, .L15
 403:..\FreeRTOS\Source/event_groups.c **** 		}
 208              		.loc 1 403 0
 209 0062 4FF08052 		mov	r2, #268435456
 210 0066 114B     		ldr	r3, .L21
 211 0068 1A60     		str	r2, [r3]
 212              		.syntax unified
 213              	@ 403 "..\FreeRTOS\Source\event_groups.c" 1
 214 006a BFF34F8F 		dsb
 215              	@ 0 "" 2
 216              	@ 403 "..\FreeRTOS\Source\event_groups.c" 1
 217 006e BFF36F8F 		isb
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.L15:
 414:..\FreeRTOS\Source/event_groups.c **** 
 222              		.loc 1 414 0
 223 0072 FFF7FEFF 		bl	uxTaskResetEventItemValue
 224              	.LVL27:
 225 0076 0446     		mov	r4, r0
 226              	.LVL28:
 416:..\FreeRTOS\Source/event_groups.c **** 		{
 227              		.loc 1 416 0
 228 0078 10F0007F 		tst	r0, #33554432
 229 007c 10D1     		bne	.L16
 418:..\FreeRTOS\Source/event_groups.c **** 			{
 230              		.loc 1 418 0
 231 007e FFF7FEFF 		bl	vPortEnterCritical
 232              	.LVL29:
 421:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 18


 233              		.loc 1 421 0
 234 0082 3C68     		ldr	r4, [r7]
 235              	.LVL30:
 425:..\FreeRTOS\Source/event_groups.c **** 				{
 236              		.loc 1 425 0
 237 0084 4246     		mov	r2, r8
 238 0086 3146     		mov	r1, r6
 239 0088 2046     		mov	r0, r4
 240 008a FFF7FEFF 		bl	prvTestWaitCondition
 241              	.LVL31:
 242 008e 28B1     		cbz	r0, .L17
 427:..\FreeRTOS\Source/event_groups.c **** 					{
 243              		.loc 1 427 0
 244 0090 B9F1000F 		cmp	r9, #0
 245 0094 02D0     		beq	.L17
 429:..\FreeRTOS\Source/event_groups.c **** 					}
 246              		.loc 1 429 0
 247 0096 24EA0606 		bic	r6, r4, r6
 248              	.LVL32:
 249 009a 3E60     		str	r6, [r7]
 250              	.L17:
 251              	.LVL33:
 442:..\FreeRTOS\Source/event_groups.c **** 		}
 252              		.loc 1 442 0
 253 009c FFF7FEFF 		bl	vPortExitCritical
 254              	.LVL34:
 255              	.L16:
 450:..\FreeRTOS\Source/event_groups.c **** 	}
 256              		.loc 1 450 0
 257 00a0 24F07F44 		bic	r4, r4, #-16777216
 258              	.LVL35:
 259              	.L14:
 458:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 260              		.loc 1 458 0
 261 00a4 2046     		mov	r0, r4
 262 00a6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 263              	.LVL36:
 264              	.L22:
 265 00aa 00BF     		.align	2
 266              	.L21:
 267 00ac 04ED00E0 		.word	-536810236
 268              		.cfi_endproc
 269              	.LFE70:
 270              		.size	xEventGroupWaitBits, .-xEventGroupWaitBits
 271              		.section	.text.xEventGroupClearBits,"ax",%progbits
 272              		.align	2
 273              		.global	xEventGroupClearBits
 274              		.thumb
 275              		.thumb_func
 276              		.type	xEventGroupClearBits, %function
 277              	xEventGroupClearBits:
 278              	.LFB71:
 462:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 279              		.loc 1 462 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 19


 283              	.LVL37:
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0646     		mov	r6, r0
 291 0004 0C46     		mov	r4, r1
 292              	.LVL38:
 471:..\FreeRTOS\Source/event_groups.c **** 	{
 293              		.loc 1 471 0
 294 0006 FFF7FEFF 		bl	vPortEnterCritical
 295              	.LVL39:
 477:..\FreeRTOS\Source/event_groups.c **** 
 296              		.loc 1 477 0
 297 000a 3568     		ldr	r5, [r6]
 298              	.LVL40:
 480:..\FreeRTOS\Source/event_groups.c **** 	}
 299              		.loc 1 480 0
 300 000c 25EA0404 		bic	r4, r5, r4
 301              	.LVL41:
 302 0010 3460     		str	r4, [r6]
 482:..\FreeRTOS\Source/event_groups.c **** 
 303              		.loc 1 482 0
 304 0012 FFF7FEFF 		bl	vPortExitCritical
 305              	.LVL42:
 485:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 306              		.loc 1 485 0
 307 0016 2846     		mov	r0, r5
 308 0018 70BD     		pop	{r4, r5, r6, pc}
 309              		.cfi_endproc
 310              	.LFE71:
 311              		.size	xEventGroupClearBits, .-xEventGroupClearBits
 312 001a 00BF     		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 313              		.align	2
 314              		.global	xEventGroupGetBitsFromISR
 315              		.thumb
 316              		.thumb_func
 317              		.type	xEventGroupGetBitsFromISR, %function
 318              	xEventGroupGetBitsFromISR:
 319              	.LFB72:
 504:..\FreeRTOS\Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 320              		.loc 1 504 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL43:
 326              	.LBB8:
 327              	.LBB9:
 328              		.file 2 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.0
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 20


   6:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 21


  63:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 22


 120:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 23


 177:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 187:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 196:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 197:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 203:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 204:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 209:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 329              		.loc 2 211 0
 330              		.syntax unified
 331              	@ 211 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 332 0000 EFF31183 			mrs r3, basepri											
 333 0004 4FF0A002 		mov r2, #160												
 334 0008 82F31188 		msr basepri, r2											
 335 000c BFF36F8F 		isb														
 336 0010 BFF34F8F 		dsb														
 337              	
 338              	@ 0 "" 2
 339              		.thumb
 340              		.syntax unified
 341              	.LBE9:
 342              	.LBE8:
 511:..\FreeRTOS\Source/event_groups.c **** 	}
 343              		.loc 1 511 0
 344 0014 0068     		ldr	r0, [r0]
 345              	.LVL44:
 346              	.LBB10:
 347              	.LBB11:
 212:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 213:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 24


 214:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 220:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 221:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 223:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 225:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 227:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 229:..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 348              		.loc 2 229 0
 349              		.syntax unified
 350              	@ 229 "..\FreeRTOS\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 351 0016 83F31188 			msr basepri, r3	
 352              	@ 0 "" 2
 353              		.thumb
 354              		.syntax unified
 355              	.LBE11:
 356              	.LBE10:
 516:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 357              		.loc 1 516 0
 358 001a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE72:
 361              		.size	xEventGroupGetBitsFromISR, .-xEventGroupGetBitsFromISR
 362              		.section	.text.xEventGroupSetBits,"ax",%progbits
 363              		.align	2
 364              		.global	xEventGroupSetBits
 365              		.thumb
 366              		.thumb_func
 367              		.type	xEventGroupSetBits, %function
 368              	xEventGroupSetBits:
 369              	.LFB73:
 520:..\FreeRTOS\Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 370              		.loc 1 520 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              	.LVL45:
 375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 3, -24
 378              		.cfi_offset 4, -20
 379              		.cfi_offset 5, -16
 380              		.cfi_offset 6, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 385              	.LVL46:
 534:..\FreeRTOS\Source/event_groups.c **** 	vTaskSuspendAll();
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 25


 386              		.loc 1 534 0
 387 0006 00F10C06 		add	r6, r0, #12
 388              	.LVL47:
 535:..\FreeRTOS\Source/event_groups.c **** 	{
 389              		.loc 1 535 0
 390 000a FFF7FEFF 		bl	vTaskSuspendAll
 391              	.LVL48:
 539:..\FreeRTOS\Source/event_groups.c **** 
 392              		.loc 1 539 0
 393 000e 2069     		ldr	r0, [r4, #16]
 394              	.LVL49:
 542:..\FreeRTOS\Source/event_groups.c **** 
 395              		.loc 1 542 0
 396 0010 2368     		ldr	r3, [r4]
 397 0012 1D43     		orrs	r5, r5, r3
 398              	.LVL50:
 399 0014 2560     		str	r5, [r4]
 524:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 400              		.loc 1 524 0
 401 0016 0027     		movs	r7, #0
 545:..\FreeRTOS\Source/event_groups.c **** 		{
 402              		.loc 1 545 0
 403 0018 1FE0     		b	.L27
 404              	.LVL51:
 405              	.L32:
 547:..\FreeRTOS\Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 406              		.loc 1 547 0
 407 001a 4568     		ldr	r5, [r0, #4]
 408              	.LVL52:
 548:..\FreeRTOS\Source/event_groups.c **** 			xMatchFound = pdFALSE;
 409              		.loc 1 548 0
 410 001c 0368     		ldr	r3, [r0]
 411              	.LVL53:
 553:..\FreeRTOS\Source/event_groups.c **** 
 412              		.loc 1 553 0
 413 001e 23F07F42 		bic	r2, r3, #-16777216
 414              	.LVL54:
 555:..\FreeRTOS\Source/event_groups.c **** 			{
 415              		.loc 1 555 0
 416 0022 13F0806F 		tst	r3, #67108864
 417 0026 04D1     		bne	.L28
 558:..\FreeRTOS\Source/event_groups.c **** 				{
 418              		.loc 1 558 0
 419 0028 2168     		ldr	r1, [r4]
 420 002a 0A42     		tst	r2, r1
 421 002c 07D1     		bne	.L33
 549:..\FreeRTOS\Source/event_groups.c **** 
 422              		.loc 1 549 0
 423 002e 0021     		movs	r1, #0
 424 0030 08E0     		b	.L29
 425              	.L28:
 567:..\FreeRTOS\Source/event_groups.c **** 			{
 426              		.loc 1 567 0
 427 0032 2168     		ldr	r1, [r4]
 428 0034 32EA0101 		bics	r1, r2, r1
 429 0038 03D0     		beq	.L34
 549:..\FreeRTOS\Source/event_groups.c **** 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 26


 430              		.loc 1 549 0
 431 003a 0021     		movs	r1, #0
 432 003c 02E0     		b	.L29
 433              	.L33:
 560:..\FreeRTOS\Source/event_groups.c **** 				}
 434              		.loc 1 560 0
 435 003e 0121     		movs	r1, #1
 436 0040 00E0     		b	.L29
 437              	.L34:
 570:..\FreeRTOS\Source/event_groups.c **** 			}
 438              		.loc 1 570 0
 439 0042 0121     		movs	r1, #1
 440              	.L29:
 441              	.LVL55:
 577:..\FreeRTOS\Source/event_groups.c **** 			{
 442              		.loc 1 577 0
 443 0044 41B1     		cbz	r1, .L30
 580:..\FreeRTOS\Source/event_groups.c **** 				{
 444              		.loc 1 580 0
 445 0046 13F0807F 		tst	r3, #16777216
 446 004a 00D0     		beq	.L31
 582:..\FreeRTOS\Source/event_groups.c **** 				}
 447              		.loc 1 582 0
 448 004c 1743     		orrs	r7, r7, r2
 449              	.LVL56:
 450              	.L31:
 594:..\FreeRTOS\Source/event_groups.c **** 			}
 451              		.loc 1 594 0
 452 004e 2168     		ldr	r1, [r4]
 453              	.LVL57:
 454 0050 41F00071 		orr	r1, r1, #33554432
 455 0054 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 456              	.LVL58:
 457              	.L30:
 549:..\FreeRTOS\Source/event_groups.c **** 
 458              		.loc 1 549 0
 459 0058 2846     		mov	r0, r5
 460              	.LVL59:
 461              	.L27:
 545:..\FreeRTOS\Source/event_groups.c **** 		{
 462              		.loc 1 545 0
 463 005a B042     		cmp	r0, r6
 464 005c DDD1     		bne	.L32
 605:..\FreeRTOS\Source/event_groups.c **** 	}
 465              		.loc 1 605 0
 466 005e 2368     		ldr	r3, [r4]
 467 0060 23EA0707 		bic	r7, r3, r7
 468              	.LVL60:
 469 0064 2760     		str	r7, [r4]
 607:..\FreeRTOS\Source/event_groups.c **** 
 470              		.loc 1 607 0
 471 0066 FFF7FEFF 		bl	xTaskResumeAll
 472              	.LVL61:
 610:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 473              		.loc 1 610 0
 474 006a 2068     		ldr	r0, [r4]
 475 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 27


 476              		.cfi_endproc
 477              	.LFE73:
 478              		.size	xEventGroupSetBits, .-xEventGroupSetBits
 479 006e 00BF     		.section	.text.xEventGroupSync,"ax",%progbits
 480              		.align	2
 481              		.global	xEventGroupSync
 482              		.thumb
 483              		.thumb_func
 484              		.type	xEventGroupSync, %function
 485              	xEventGroupSync:
 486              	.LFB69:
 192:..\FreeRTOS\Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 487              		.loc 1 192 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL62:
 492 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 493              		.cfi_def_cfa_offset 24
 494              		.cfi_offset 4, -24
 495              		.cfi_offset 5, -20
 496              		.cfi_offset 6, -16
 497              		.cfi_offset 7, -12
 498              		.cfi_offset 8, -8
 499              		.cfi_offset 14, -4
 500 0004 0546     		mov	r5, r0
 501 0006 0C46     		mov	r4, r1
 502 0008 1746     		mov	r7, r2
 503 000a 1E46     		mov	r6, r3
 504              	.LVL63:
 206:..\FreeRTOS\Source/event_groups.c **** 	{
 505              		.loc 1 206 0
 506 000c FFF7FEFF 		bl	vTaskSuspendAll
 507              	.LVL64:
 208:..\FreeRTOS\Source/event_groups.c **** 
 508              		.loc 1 208 0
 509 0010 D5F80080 		ldr	r8, [r5]
 510              	.LVL65:
 210:..\FreeRTOS\Source/event_groups.c **** 
 511              		.loc 1 210 0
 512 0014 2146     		mov	r1, r4
 513 0016 2846     		mov	r0, r5
 514 0018 FFF7FEFF 		bl	xEventGroupSetBits
 515              	.LVL66:
 212:..\FreeRTOS\Source/event_groups.c **** 		{
 516              		.loc 1 212 0
 517 001c 48EA0404 		orr	r4, r8, r4
 518              	.LVL67:
 519 0020 37EA0403 		bics	r3, r7, r4
 520 0024 05D1     		bne	.L37
 521              	.LVL68:
 219:..\FreeRTOS\Source/event_groups.c **** 
 522              		.loc 1 219 0
 523 0026 2B68     		ldr	r3, [r5]
 524 0028 23EA0703 		bic	r3, r3, r7
 525 002c 2B60     		str	r3, [r5]
 526              	.LVL69:
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 28


 221:..\FreeRTOS\Source/event_groups.c **** 		}
 527              		.loc 1 221 0
 528 002e 0026     		movs	r6, #0
 529 0030 09E0     		b	.L38
 530              	.LVL70:
 531              	.L37:
 225:..\FreeRTOS\Source/event_groups.c **** 			{
 532              		.loc 1 225 0
 533 0032 3EB1     		cbz	r6, .L39
 232:..\FreeRTOS\Source/event_groups.c **** 
 534              		.loc 1 232 0
 535 0034 3246     		mov	r2, r6
 536 0036 47F0A061 		orr	r1, r7, #83886080
 537 003a 281D     		adds	r0, r5, #4
 538 003c FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 539              	.LVL71:
 238:..\FreeRTOS\Source/event_groups.c **** 			}
 540              		.loc 1 238 0
 541 0040 0024     		movs	r4, #0
 542 0042 00E0     		b	.L38
 543              	.LVL72:
 544              	.L39:
 244:..\FreeRTOS\Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 545              		.loc 1 244 0
 546 0044 2C68     		ldr	r4, [r5]
 547              	.LVL73:
 548              	.L38:
 249:..\FreeRTOS\Source/event_groups.c **** 
 549              		.loc 1 249 0
 550 0046 FFF7FEFF 		bl	xTaskResumeAll
 551              	.LVL74:
 251:..\FreeRTOS\Source/event_groups.c **** 	{
 552              		.loc 1 251 0
 553 004a DEB1     		cbz	r6, .L40
 253:..\FreeRTOS\Source/event_groups.c **** 		{
 554              		.loc 1 253 0
 555 004c 38B9     		cbnz	r0, .L41
 255:..\FreeRTOS\Source/event_groups.c **** 		}
 556              		.loc 1 255 0
 557 004e 4FF08052 		mov	r2, #268435456
 558 0052 0E4B     		ldr	r3, .L45
 559 0054 1A60     		str	r2, [r3]
 560              		.syntax unified
 561              	@ 255 "..\FreeRTOS\Source\event_groups.c" 1
 562 0056 BFF34F8F 		dsb
 563              	@ 0 "" 2
 564              	@ 255 "..\FreeRTOS\Source\event_groups.c" 1
 565 005a BFF36F8F 		isb
 566              	@ 0 "" 2
 567              		.thumb
 568              		.syntax unified
 569              	.L41:
 266:..\FreeRTOS\Source/event_groups.c **** 
 570              		.loc 1 266 0
 571 005e FFF7FEFF 		bl	uxTaskResetEventItemValue
 572              	.LVL75:
 573 0062 0446     		mov	r4, r0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 29


 574              	.LVL76:
 268:..\FreeRTOS\Source/event_groups.c **** 		{
 575              		.loc 1 268 0
 576 0064 10F0007F 		tst	r0, #33554432
 577 0068 0AD1     		bne	.L42
 271:..\FreeRTOS\Source/event_groups.c **** 			{
 578              		.loc 1 271 0
 579 006a FFF7FEFF 		bl	vPortEnterCritical
 580              	.LVL77:
 273:..\FreeRTOS\Source/event_groups.c **** 
 581              		.loc 1 273 0
 582 006e 2C68     		ldr	r4, [r5]
 583              	.LVL78:
 279:..\FreeRTOS\Source/event_groups.c **** 				{
 584              		.loc 1 279 0
 585 0070 37EA0403 		bics	r3, r7, r4
 586 0074 02D1     		bne	.L43
 281:..\FreeRTOS\Source/event_groups.c **** 				}
 587              		.loc 1 281 0
 588 0076 24EA0707 		bic	r7, r4, r7
 589              	.LVL79:
 590 007a 2F60     		str	r7, [r5]
 591              	.L43:
 288:..\FreeRTOS\Source/event_groups.c **** 
 592              		.loc 1 288 0
 593 007c FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL80:
 595              	.L42:
 299:..\FreeRTOS\Source/event_groups.c **** 	}
 596              		.loc 1 299 0
 597 0080 24F07F44 		bic	r4, r4, #-16777216
 598              	.LVL81:
 599              	.L40:
 308:..\FreeRTOS\Source/event_groups.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 308 0
 601 0084 2046     		mov	r0, r4
 602 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 603              	.LVL82:
 604              	.L46:
 605 008a 00BF     		.align	2
 606              	.L45:
 607 008c 04ED00E0 		.word	-536810236
 608              		.cfi_endproc
 609              	.LFE69:
 610              		.size	xEventGroupSync, .-xEventGroupSync
 611              		.section	.text.vEventGroupDelete,"ax",%progbits
 612              		.align	2
 613              		.global	vEventGroupDelete
 614              		.thumb
 615              		.thumb_func
 616              		.type	vEventGroupDelete, %function
 617              	vEventGroupDelete:
 618              	.LFB74:
 614:..\FreeRTOS\Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 619              		.loc 1 614 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 30


 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              	.LVL83:
 624 0000 10B5     		push	{r4, lr}
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 628 0002 0446     		mov	r4, r0
 629              	.LVL84:
 618:..\FreeRTOS\Source/event_groups.c **** 	{
 630              		.loc 1 618 0
 631 0004 FFF7FEFF 		bl	vTaskSuspendAll
 632              	.LVL85:
 622:..\FreeRTOS\Source/event_groups.c **** 		{
 633              		.loc 1 622 0
 634 0008 04E0     		b	.L48
 635              	.L49:
 627:..\FreeRTOS\Source/event_groups.c **** 		}
 636              		.loc 1 627 0
 637 000a 4FF00071 		mov	r1, #33554432
 638 000e 2069     		ldr	r0, [r4, #16]
 639 0010 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 640              	.LVL86:
 641              	.L48:
 622:..\FreeRTOS\Source/event_groups.c **** 		{
 642              		.loc 1 622 0
 643 0014 6368     		ldr	r3, [r4, #4]
 644 0016 002B     		cmp	r3, #0
 645 0018 F7D1     		bne	.L49
 634:..\FreeRTOS\Source/event_groups.c **** 		}
 646              		.loc 1 634 0
 647 001a 2046     		mov	r0, r4
 648 001c FFF7FEFF 		bl	vPortFree
 649              	.LVL87:
 651:..\FreeRTOS\Source/event_groups.c **** }
 650              		.loc 1 651 0
 651 0020 FFF7FEFF 		bl	xTaskResumeAll
 652              	.LVL88:
 653 0024 10BD     		pop	{r4, pc}
 654              		.cfi_endproc
 655              	.LFE74:
 656              		.size	vEventGroupDelete, .-vEventGroupDelete
 657 0026 00BF     		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 658              		.align	2
 659              		.global	vEventGroupSetBitsCallback
 660              		.thumb
 661              		.thumb_func
 662              		.type	vEventGroupSetBitsCallback, %function
 663              	vEventGroupSetBitsCallback:
 664              	.LFB75:
 658:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 665              		.loc 1 658 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL89:
 670 0000 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 31


 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 659:..\FreeRTOS\Source/event_groups.c **** }
 674              		.loc 1 659 0
 675 0002 FFF7FEFF 		bl	xEventGroupSetBits
 676              	.LVL90:
 677 0006 08BD     		pop	{r3, pc}
 678              		.cfi_endproc
 679              	.LFE75:
 680              		.size	vEventGroupSetBitsCallback, .-vEventGroupSetBitsCallback
 681              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 682              		.align	2
 683              		.global	vEventGroupClearBitsCallback
 684              		.thumb
 685              		.thumb_func
 686              		.type	vEventGroupClearBitsCallback, %function
 687              	vEventGroupClearBitsCallback:
 688              	.LFB76:
 666:..\FreeRTOS\Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 689              		.loc 1 666 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL91:
 694 0000 08B5     		push	{r3, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 3, -8
 697              		.cfi_offset 14, -4
 667:..\FreeRTOS\Source/event_groups.c **** }
 698              		.loc 1 667 0
 699 0002 FFF7FEFF 		bl	xEventGroupClearBits
 700              	.LVL92:
 701 0006 08BD     		pop	{r3, pc}
 702              		.cfi_endproc
 703              	.LFE76:
 704              		.size	vEventGroupClearBitsCallback, .-vEventGroupClearBitsCallback
 705              		.text
 706              	.Letext0:
 707              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 708              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 709              		.file 5 "..\\FreeRTOS\\Source\\include/list.h"
 710              		.file 6 "..\\FreeRTOS\\Source\\include/event_groups.h"
 711              		.file 7 "..\\FreeRTOS\\Source\\include/portable.h"
 712              		.file 8 "..\\FreeRTOS\\Source\\include/task.h"
 713              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 714              		.section	.debug_info,"",%progbits
 715              	.Ldebug_info0:
 716 0000 22090000 		.4byte	0x922
 717 0004 0400     		.2byte	0x4
 718 0006 00000000 		.4byte	.Ldebug_abbrev0
 719 000a 04       		.byte	0x4
 720 000b 01       		.uleb128 0x1
 721 000c 08050000 		.4byte	.LASF87
 722 0010 0C       		.byte	0xc
 723 0011 B8020000 		.4byte	.LASF88
 724 0015 A8000000 		.4byte	.LASF89
 725 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 32


 726 001d 00000000 		.4byte	0
 727 0021 00000000 		.4byte	.Ldebug_line0
 728 0025 02       		.uleb128 0x2
 729 0026 04       		.byte	0x4
 730 0027 07       		.byte	0x7
 731 0028 F0020000 		.4byte	.LASF0
 732 002c 03       		.uleb128 0x3
 733 002d 04       		.byte	0x4
 734 002e 05       		.byte	0x5
 735 002f 696E7400 		.ascii	"int\000"
 736 0033 02       		.uleb128 0x2
 737 0034 08       		.byte	0x8
 738 0035 05       		.byte	0x5
 739 0036 AE010000 		.4byte	.LASF1
 740 003a 02       		.uleb128 0x2
 741 003b 08       		.byte	0x8
 742 003c 04       		.byte	0x4
 743 003d 61020000 		.4byte	.LASF2
 744 0041 02       		.uleb128 0x2
 745 0042 01       		.byte	0x1
 746 0043 06       		.byte	0x6
 747 0044 8D020000 		.4byte	.LASF3
 748 0048 02       		.uleb128 0x2
 749 0049 01       		.byte	0x1
 750 004a 08       		.byte	0x8
 751 004b 6D020000 		.4byte	.LASF4
 752 004f 02       		.uleb128 0x2
 753 0050 02       		.byte	0x2
 754 0051 05       		.byte	0x5
 755 0052 8A000000 		.4byte	.LASF5
 756 0056 02       		.uleb128 0x2
 757 0057 02       		.byte	0x2
 758 0058 07       		.byte	0x7
 759 0059 42030000 		.4byte	.LASF6
 760 005d 04       		.uleb128 0x4
 761 005e 8C040000 		.4byte	.LASF8
 762 0062 03       		.byte	0x3
 763 0063 3F       		.byte	0x3f
 764 0064 68000000 		.4byte	0x68
 765 0068 02       		.uleb128 0x2
 766 0069 04       		.byte	0x4
 767 006a 05       		.byte	0x5
 768 006b E0010000 		.4byte	.LASF7
 769 006f 04       		.uleb128 0x4
 770 0070 FC000000 		.4byte	.LASF9
 771 0074 03       		.byte	0x3
 772 0075 41       		.byte	0x41
 773 0076 7A000000 		.4byte	0x7a
 774 007a 02       		.uleb128 0x2
 775 007b 04       		.byte	0x4
 776 007c 07       		.byte	0x7
 777 007d 2B040000 		.4byte	.LASF10
 778 0081 02       		.uleb128 0x2
 779 0082 08       		.byte	0x8
 780 0083 07       		.byte	0x7
 781 0084 A1020000 		.4byte	.LASF11
 782 0088 02       		.uleb128 0x2
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 33


 783 0089 04       		.byte	0x4
 784 008a 07       		.byte	0x7
 785 008b AD040000 		.4byte	.LASF12
 786 008f 05       		.uleb128 0x5
 787 0090 04       		.byte	0x4
 788 0091 02       		.uleb128 0x2
 789 0092 01       		.byte	0x1
 790 0093 08       		.byte	0x8
 791 0094 8D030000 		.4byte	.LASF13
 792 0098 04       		.uleb128 0x4
 793 0099 99020000 		.4byte	.LASF14
 794 009d 04       		.byte	0x4
 795 009e 2C       		.byte	0x2c
 796 009f 5D000000 		.4byte	0x5d
 797 00a3 04       		.uleb128 0x4
 798 00a4 DA020000 		.4byte	.LASF15
 799 00a8 04       		.byte	0x4
 800 00a9 30       		.byte	0x30
 801 00aa 6F000000 		.4byte	0x6f
 802 00ae 02       		.uleb128 0x2
 803 00af 04       		.byte	0x4
 804 00b0 04       		.byte	0x4
 805 00b1 82010000 		.4byte	.LASF16
 806 00b5 02       		.uleb128 0x2
 807 00b6 08       		.byte	0x8
 808 00b7 04       		.byte	0x4
 809 00b8 DC040000 		.4byte	.LASF17
 810 00bc 04       		.uleb128 0x4
 811 00bd 08030000 		.4byte	.LASF18
 812 00c1 02       		.byte	0x2
 813 00c2 38       		.byte	0x38
 814 00c3 68000000 		.4byte	0x68
 815 00c7 04       		.uleb128 0x4
 816 00c8 3D040000 		.4byte	.LASF19
 817 00cc 02       		.byte	0x2
 818 00cd 39       		.byte	0x39
 819 00ce 7A000000 		.4byte	0x7a
 820 00d2 04       		.uleb128 0x4
 821 00d3 56020000 		.4byte	.LASF20
 822 00d7 02       		.byte	0x2
 823 00d8 3F       		.byte	0x3f
 824 00d9 A3000000 		.4byte	0xa3
 825 00dd 06       		.uleb128 0x6
 826 00de 36020000 		.4byte	.LASF26
 827 00e2 14       		.byte	0x14
 828 00e3 05       		.byte	0x5
 829 00e4 8C       		.byte	0x8c
 830 00e5 26010000 		.4byte	0x126
 831 00e9 07       		.uleb128 0x7
 832 00ea FA010000 		.4byte	.LASF21
 833 00ee 05       		.byte	0x5
 834 00ef 8F       		.byte	0x8f
 835 00f0 D2000000 		.4byte	0xd2
 836 00f4 00       		.byte	0
 837 00f5 07       		.uleb128 0x7
 838 00f6 9F030000 		.4byte	.LASF22
 839 00fa 05       		.byte	0x5
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 34


 840 00fb 90       		.byte	0x90
 841 00fc 26010000 		.4byte	0x126
 842 0100 04       		.byte	0x4
 843 0101 07       		.uleb128 0x7
 844 0102 9D000000 		.4byte	.LASF23
 845 0106 05       		.byte	0x5
 846 0107 91       		.byte	0x91
 847 0108 26010000 		.4byte	0x126
 848 010c 08       		.byte	0x8
 849 010d 07       		.uleb128 0x7
 850 010e 25010000 		.4byte	.LASF24
 851 0112 05       		.byte	0x5
 852 0113 92       		.byte	0x92
 853 0114 8F000000 		.4byte	0x8f
 854 0118 0C       		.byte	0xc
 855 0119 07       		.uleb128 0x7
 856 011a 13030000 		.4byte	.LASF25
 857 011e 05       		.byte	0x5
 858 011f 93       		.byte	0x93
 859 0120 5D010000 		.4byte	0x15d
 860 0124 10       		.byte	0x10
 861 0125 00       		.byte	0
 862 0126 08       		.uleb128 0x8
 863 0127 04       		.byte	0x4
 864 0128 DD000000 		.4byte	0xdd
 865 012c 06       		.uleb128 0x6
 866 012d E9010000 		.4byte	.LASF27
 867 0131 14       		.byte	0x14
 868 0132 05       		.byte	0x5
 869 0133 A4       		.byte	0xa4
 870 0134 5D010000 		.4byte	0x15d
 871 0138 07       		.uleb128 0x7
 872 0139 62040000 		.4byte	.LASF28
 873 013d 05       		.byte	0x5
 874 013e A7       		.byte	0xa7
 875 013f AA010000 		.4byte	0x1aa
 876 0143 00       		.byte	0
 877 0144 07       		.uleb128 0x7
 878 0145 EF040000 		.4byte	.LASF29
 879 0149 05       		.byte	0x5
 880 014a A8       		.byte	0xa8
 881 014b AF010000 		.4byte	0x1af
 882 014f 04       		.byte	0x4
 883 0150 07       		.uleb128 0x7
 884 0151 94000000 		.4byte	.LASF30
 885 0155 05       		.byte	0x5
 886 0156 A9       		.byte	0xa9
 887 0157 9F010000 		.4byte	0x19f
 888 015b 08       		.byte	0x8
 889 015c 00       		.byte	0
 890 015d 08       		.uleb128 0x8
 891 015e 04       		.byte	0x4
 892 015f 2C010000 		.4byte	0x12c
 893 0163 04       		.uleb128 0x4
 894 0164 FD020000 		.4byte	.LASF31
 895 0168 05       		.byte	0x5
 896 0169 96       		.byte	0x96
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 35


 897 016a DD000000 		.4byte	0xdd
 898 016e 06       		.uleb128 0x6
 899 016f B1050000 		.4byte	.LASF32
 900 0173 0C       		.byte	0xc
 901 0174 05       		.byte	0x5
 902 0175 98       		.byte	0x98
 903 0176 9F010000 		.4byte	0x19f
 904 017a 07       		.uleb128 0x7
 905 017b FA010000 		.4byte	.LASF21
 906 017f 05       		.byte	0x5
 907 0180 9B       		.byte	0x9b
 908 0181 D2000000 		.4byte	0xd2
 909 0185 00       		.byte	0
 910 0186 07       		.uleb128 0x7
 911 0187 9F030000 		.4byte	.LASF22
 912 018b 05       		.byte	0x5
 913 018c 9C       		.byte	0x9c
 914 018d 26010000 		.4byte	0x126
 915 0191 04       		.byte	0x4
 916 0192 07       		.uleb128 0x7
 917 0193 9D000000 		.4byte	.LASF23
 918 0197 05       		.byte	0x5
 919 0198 9D       		.byte	0x9d
 920 0199 26010000 		.4byte	0x126
 921 019d 08       		.byte	0x8
 922 019e 00       		.byte	0
 923 019f 04       		.uleb128 0x4
 924 01a0 9F010000 		.4byte	.LASF33
 925 01a4 05       		.byte	0x5
 926 01a5 9F       		.byte	0x9f
 927 01a6 6E010000 		.4byte	0x16e
 928 01aa 09       		.uleb128 0x9
 929 01ab C7000000 		.4byte	0xc7
 930 01af 08       		.uleb128 0x8
 931 01b0 04       		.byte	0x4
 932 01b1 63010000 		.4byte	0x163
 933 01b5 04       		.uleb128 0x4
 934 01b6 98010000 		.4byte	.LASF34
 935 01ba 05       		.byte	0x5
 936 01bb AB       		.byte	0xab
 937 01bc 2C010000 		.4byte	0x12c
 938 01c0 04       		.uleb128 0x4
 939 01c1 3A010000 		.4byte	.LASF35
 940 01c5 06       		.byte	0x6
 941 01c6 52       		.byte	0x52
 942 01c7 CB010000 		.4byte	0x1cb
 943 01cb 08       		.uleb128 0x8
 944 01cc 04       		.byte	0x4
 945 01cd D1010000 		.4byte	0x1d1
 946 01d1 06       		.uleb128 0x6
 947 01d2 D7030000 		.4byte	.LASF36
 948 01d6 18       		.byte	0x18
 949 01d7 01       		.byte	0x1
 950 01d8 3F       		.byte	0x3f
 951 01d9 F6010000 		.4byte	0x1f6
 952 01dd 07       		.uleb128 0x7
 953 01de B9030000 		.4byte	.LASF37
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 36


 954 01e2 01       		.byte	0x1
 955 01e3 41       		.byte	0x41
 956 01e4 F6010000 		.4byte	0x1f6
 957 01e8 00       		.byte	0
 958 01e9 07       		.uleb128 0x7
 959 01ea 11020000 		.4byte	.LASF38
 960 01ee 01       		.byte	0x1
 961 01ef 42       		.byte	0x42
 962 01f0 B5010000 		.4byte	0x1b5
 963 01f4 04       		.byte	0x4
 964 01f5 00       		.byte	0
 965 01f6 04       		.uleb128 0x4
 966 01f7 07010000 		.4byte	.LASF39
 967 01fb 06       		.byte	0x6
 968 01fc 5C       		.byte	0x5c
 969 01fd D2000000 		.4byte	0xd2
 970 0201 04       		.uleb128 0x4
 971 0202 31060000 		.4byte	.LASF40
 972 0206 01       		.byte	0x1
 973 0207 4B       		.byte	0x4b
 974 0208 D1010000 		.4byte	0x1d1
 975 020c 0A       		.uleb128 0xa
 976 020d 7D030000 		.4byte	.LASF90
 977 0211 02       		.byte	0x2
 978 0212 E3       		.byte	0xe3
 979 0213 03       		.byte	0x3
 980 0214 24020000 		.4byte	0x224
 981 0218 0B       		.uleb128 0xb
 982 0219 49040000 		.4byte	.LASF91
 983 021d 02       		.byte	0x2
 984 021e E3       		.byte	0xe3
 985 021f A3000000 		.4byte	0xa3
 986 0223 00       		.byte	0
 987 0224 0C       		.uleb128 0xc
 988 0225 4D010000 		.4byte	.LASF92
 989 0229 02       		.byte	0x2
 990 022a CF       		.byte	0xcf
 991 022b A3000000 		.4byte	0xa3
 992 022f 03       		.byte	0x3
 993 0230 4B020000 		.4byte	0x24b
 994 0234 0D       		.uleb128 0xd
 995 0235 7B020000 		.4byte	.LASF41
 996 0239 02       		.byte	0x2
 997 023a D1       		.byte	0xd1
 998 023b A3000000 		.4byte	0xa3
 999 023f 0D       		.uleb128 0xd
 1000 0240 34000000 		.4byte	.LASF42
 1001 0244 02       		.byte	0x2
 1002 0245 D1       		.byte	0xd1
 1003 0246 A3000000 		.4byte	0xa3
 1004 024a 00       		.byte	0
 1005 024b 0E       		.uleb128 0xe
 1006 024c 68030000 		.4byte	.LASF93
 1007 0250 01       		.byte	0x1
 1008 0251 9F02     		.2byte	0x29f
 1009 0253 BC000000 		.4byte	0xbc
 1010 0257 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 37


 1011 025b 1C000000 		.4byte	.LFE77-.LFB77
 1012 025f 01       		.uleb128 0x1
 1013 0260 9C       		.byte	0x9c
 1014 0261 A2020000 		.4byte	0x2a2
 1015 0265 0F       		.uleb128 0xf
 1016 0266 C1050000 		.4byte	.LASF43
 1017 026a 01       		.byte	0x1
 1018 026b 9F02     		.2byte	0x29f
 1019 026d A2020000 		.4byte	0x2a2
 1020 0271 00000000 		.4byte	.LLST0
 1021 0275 10       		.uleb128 0x10
 1022 0276 88010000 		.4byte	.LASF44
 1023 027a 01       		.byte	0x1
 1024 027b 9F02     		.2byte	0x29f
 1025 027d A2020000 		.4byte	0x2a2
 1026 0281 01       		.uleb128 0x1
 1027 0282 51       		.byte	0x51
 1028 0283 10       		.uleb128 0x10
 1029 0284 60000000 		.4byte	.LASF45
 1030 0288 01       		.byte	0x1
 1031 0289 9F02     		.2byte	0x29f
 1032 028b A7020000 		.4byte	0x2a7
 1033 028f 01       		.uleb128 0x1
 1034 0290 52       		.byte	0x52
 1035 0291 11       		.uleb128 0x11
 1036 0292 13010000 		.4byte	.LASF46
 1037 0296 01       		.byte	0x1
 1038 0297 A102     		.2byte	0x2a1
 1039 0299 BC000000 		.4byte	0xbc
 1040 029d 6C000000 		.4byte	.LLST1
 1041 02a1 00       		.byte	0
 1042 02a2 12       		.uleb128 0x12
 1043 02a3 F6010000 		.4byte	0x1f6
 1044 02a7 12       		.uleb128 0x12
 1045 02a8 BC000000 		.4byte	0xbc
 1046 02ac 13       		.uleb128 0x13
 1047 02ad 22000000 		.4byte	.LASF48
 1048 02b1 01       		.byte	0x1
 1049 02b2 91       		.byte	0x91
 1050 02b3 C0010000 		.4byte	0x1c0
 1051 02b7 00000000 		.4byte	.LFB68
 1052 02bb 1A000000 		.4byte	.LFE68-.LFB68
 1053 02bf 01       		.uleb128 0x1
 1054 02c0 9C       		.byte	0x9c
 1055 02c1 F8020000 		.4byte	0x2f8
 1056 02c5 14       		.uleb128 0x14
 1057 02c6 E3040000 		.4byte	.LASF47
 1058 02ca 01       		.byte	0x1
 1059 02cb 93       		.byte	0x93
 1060 02cc F8020000 		.4byte	0x2f8
 1061 02d0 8B000000 		.4byte	.LLST2
 1062 02d4 15       		.uleb128 0x15
 1063 02d5 08000000 		.4byte	.LVL8
 1064 02d9 B1080000 		.4byte	0x8b1
 1065 02dd E7020000 		.4byte	0x2e7
 1066 02e1 16       		.uleb128 0x16
 1067 02e2 01       		.uleb128 0x1
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 38


 1068 02e3 50       		.byte	0x50
 1069 02e4 01       		.uleb128 0x1
 1070 02e5 48       		.byte	0x48
 1071 02e6 00       		.byte	0
 1072 02e7 17       		.uleb128 0x17
 1073 02e8 16000000 		.4byte	.LVL10
 1074 02ec BC080000 		.4byte	0x8bc
 1075 02f0 16       		.uleb128 0x16
 1076 02f1 01       		.uleb128 0x1
 1077 02f2 50       		.byte	0x50
 1078 02f3 02       		.uleb128 0x2
 1079 02f4 74       		.byte	0x74
 1080 02f5 04       		.sleb128 4
 1081 02f6 00       		.byte	0
 1082 02f7 00       		.byte	0
 1083 02f8 08       		.uleb128 0x8
 1084 02f9 04       		.byte	0x4
 1085 02fa 01020000 		.4byte	0x201
 1086 02fe 18       		.uleb128 0x18
 1087 02ff 1F030000 		.4byte	.LASF49
 1088 0303 01       		.byte	0x1
 1089 0304 3701     		.2byte	0x137
 1090 0306 F6010000 		.4byte	0x1f6
 1091 030a 00000000 		.4byte	.LFB70
 1092 030e B0000000 		.4byte	.LFE70-.LFB70
 1093 0312 01       		.uleb128 0x1
 1094 0313 9C       		.byte	0x9c
 1095 0314 66040000 		.4byte	0x466
 1096 0318 0F       		.uleb128 0xf
 1097 0319 C2040000 		.4byte	.LASF50
 1098 031d 01       		.byte	0x1
 1099 031e 3701     		.2byte	0x137
 1100 0320 C0010000 		.4byte	0x1c0
 1101 0324 A9000000 		.4byte	.LLST3
 1102 0328 0F       		.uleb128 0xf
 1103 0329 88010000 		.4byte	.LASF44
 1104 032d 01       		.byte	0x1
 1105 032e 3701     		.2byte	0x137
 1106 0330 A2020000 		.4byte	0x2a2
 1107 0334 D5000000 		.4byte	.LLST4
 1108 0338 0F       		.uleb128 0xf
 1109 0339 EF000000 		.4byte	.LASF51
 1110 033d 01       		.byte	0x1
 1111 033e 3701     		.2byte	0x137
 1112 0340 A7020000 		.4byte	0x2a7
 1113 0344 01010000 		.4byte	.LLST5
 1114 0348 0F       		.uleb128 0xf
 1115 0349 60000000 		.4byte	.LASF45
 1116 034d 01       		.byte	0x1
 1117 034e 3701     		.2byte	0x137
 1118 0350 A7020000 		.4byte	0x2a7
 1119 0354 2D010000 		.4byte	.LLST6
 1120 0358 0F       		.uleb128 0xf
 1121 0359 2D010000 		.4byte	.LASF52
 1122 035d 01       		.byte	0x1
 1123 035e 3701     		.2byte	0x137
 1124 0360 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 39


 1125 0364 59010000 		.4byte	.LLST7
 1126 0368 11       		.uleb128 0x11
 1127 0369 E3040000 		.4byte	.LASF47
 1128 036d 01       		.byte	0x1
 1129 036e 3901     		.2byte	0x139
 1130 0370 F8020000 		.4byte	0x2f8
 1131 0374 9C010000 		.4byte	.LLST8
 1132 0378 11       		.uleb128 0x11
 1133 0379 22040000 		.4byte	.LASF53
 1134 037d 01       		.byte	0x1
 1135 037e 3A01     		.2byte	0x13a
 1136 0380 F6010000 		.4byte	0x1f6
 1137 0384 C8010000 		.4byte	.LLST9
 1138 0388 11       		.uleb128 0x11
 1139 0389 E7030000 		.4byte	.LASF54
 1140 038d 01       		.byte	0x1
 1141 038e 3A01     		.2byte	0x13a
 1142 0390 F6010000 		.4byte	0x1f6
 1143 0394 13020000 		.4byte	.LLST10
 1144 0398 11       		.uleb128 0x11
 1145 0399 13010000 		.4byte	.LASF46
 1146 039d 01       		.byte	0x1
 1147 039e 3B01     		.2byte	0x13b
 1148 03a0 BC000000 		.4byte	0xbc
 1149 03a4 3E020000 		.4byte	.LLST11
 1150 03a8 11       		.uleb128 0x11
 1151 03a9 07060000 		.4byte	.LASF55
 1152 03ad 01       		.byte	0x1
 1153 03ae 3B01     		.2byte	0x13b
 1154 03b0 BC000000 		.4byte	0xbc
 1155 03b4 5C020000 		.4byte	.LLST12
 1156 03b8 11       		.uleb128 0x11
 1157 03b9 F7040000 		.4byte	.LASF56
 1158 03bd 01       		.byte	0x1
 1159 03be 3C01     		.2byte	0x13c
 1160 03c0 BC000000 		.4byte	0xbc
 1161 03c4 6F020000 		.4byte	.LLST13
 1162 03c8 19       		.uleb128 0x19
 1163 03c9 00000000 		.4byte	.Ldebug_ranges0+0
 1164 03cd 18040000 		.4byte	0x418
 1165 03d1 11       		.uleb128 0x11
 1166 03d2 C1050000 		.4byte	.LASF43
 1167 03d6 01       		.byte	0x1
 1168 03d7 4B01     		.2byte	0x14b
 1169 03d9 A2020000 		.4byte	0x2a2
 1170 03dd 8F020000 		.4byte	.LLST14
 1171 03e1 15       		.uleb128 0x15
 1172 03e2 1E000000 		.4byte	.LVL15
 1173 03e6 4B020000 		.4byte	0x24b
 1174 03ea 01040000 		.4byte	0x401
 1175 03ee 16       		.uleb128 0x16
 1176 03ef 01       		.uleb128 0x1
 1177 03f0 50       		.byte	0x50
 1178 03f1 02       		.uleb128 0x2
 1179 03f2 74       		.byte	0x74
 1180 03f3 00       		.sleb128 0
 1181 03f4 16       		.uleb128 0x16
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 40


 1182 03f5 01       		.uleb128 0x1
 1183 03f6 51       		.byte	0x51
 1184 03f7 02       		.uleb128 0x2
 1185 03f8 76       		.byte	0x76
 1186 03f9 00       		.sleb128 0
 1187 03fa 16       		.uleb128 0x16
 1188 03fb 01       		.uleb128 0x1
 1189 03fc 52       		.byte	0x52
 1190 03fd 02       		.uleb128 0x2
 1191 03fe 78       		.byte	0x78
 1192 03ff 00       		.sleb128 0
 1193 0400 00       		.byte	0
 1194 0401 17       		.uleb128 0x17
 1195 0402 54000000 		.4byte	.LVL22
 1196 0406 C8080000 		.4byte	0x8c8
 1197 040a 16       		.uleb128 0x16
 1198 040b 01       		.uleb128 0x1
 1199 040c 50       		.byte	0x50
 1200 040d 02       		.uleb128 0x2
 1201 040e 77       		.byte	0x77
 1202 040f 04       		.sleb128 4
 1203 0410 16       		.uleb128 0x16
 1204 0411 01       		.uleb128 0x1
 1205 0412 52       		.byte	0x52
 1206 0413 02       		.uleb128 0x2
 1207 0414 75       		.byte	0x75
 1208 0415 00       		.sleb128 0
 1209 0416 00       		.byte	0
 1210 0417 00       		.byte	0
 1211 0418 1A       		.uleb128 0x1a
 1212 0419 12000000 		.4byte	.LVL13
 1213 041d D4080000 		.4byte	0x8d4
 1214 0421 1A       		.uleb128 0x1a
 1215 0422 5E000000 		.4byte	.LVL26
 1216 0426 E0080000 		.4byte	0x8e0
 1217 042a 1A       		.uleb128 0x1a
 1218 042b 76000000 		.4byte	.LVL27
 1219 042f EC080000 		.4byte	0x8ec
 1220 0433 1A       		.uleb128 0x1a
 1221 0434 82000000 		.4byte	.LVL29
 1222 0438 F8080000 		.4byte	0x8f8
 1223 043c 15       		.uleb128 0x15
 1224 043d 8E000000 		.4byte	.LVL31
 1225 0441 4B020000 		.4byte	0x24b
 1226 0445 5C040000 		.4byte	0x45c
 1227 0449 16       		.uleb128 0x16
 1228 044a 01       		.uleb128 0x1
 1229 044b 50       		.byte	0x50
 1230 044c 02       		.uleb128 0x2
 1231 044d 74       		.byte	0x74
 1232 044e 00       		.sleb128 0
 1233 044f 16       		.uleb128 0x16
 1234 0450 01       		.uleb128 0x1
 1235 0451 51       		.byte	0x51
 1236 0452 02       		.uleb128 0x2
 1237 0453 76       		.byte	0x76
 1238 0454 00       		.sleb128 0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 41


 1239 0455 16       		.uleb128 0x16
 1240 0456 01       		.uleb128 0x1
 1241 0457 52       		.byte	0x52
 1242 0458 02       		.uleb128 0x2
 1243 0459 78       		.byte	0x78
 1244 045a 00       		.sleb128 0
 1245 045b 00       		.byte	0
 1246 045c 1A       		.uleb128 0x1a
 1247 045d A0000000 		.4byte	.LVL34
 1248 0461 03090000 		.4byte	0x903
 1249 0465 00       		.byte	0
 1250 0466 18       		.uleb128 0x18
 1251 0467 41020000 		.4byte	.LASF57
 1252 046b 01       		.byte	0x1
 1253 046c CD01     		.2byte	0x1cd
 1254 046e F6010000 		.4byte	0x1f6
 1255 0472 00000000 		.4byte	.LFB71
 1256 0476 1A000000 		.4byte	.LFE71-.LFB71
 1257 047a 01       		.uleb128 0x1
 1258 047b 9C       		.byte	0x9c
 1259 047c D1040000 		.4byte	0x4d1
 1260 0480 0F       		.uleb128 0xf
 1261 0481 C2040000 		.4byte	.LASF50
 1262 0485 01       		.byte	0x1
 1263 0486 CD01     		.2byte	0x1cd
 1264 0488 C0010000 		.4byte	0x1c0
 1265 048c AD020000 		.4byte	.LLST15
 1266 0490 0F       		.uleb128 0xf
 1267 0491 CE040000 		.4byte	.LASF58
 1268 0495 01       		.byte	0x1
 1269 0496 CD01     		.2byte	0x1cd
 1270 0498 A2020000 		.4byte	0x2a2
 1271 049c CB020000 		.4byte	.LLST16
 1272 04a0 11       		.uleb128 0x11
 1273 04a1 E3040000 		.4byte	.LASF47
 1274 04a5 01       		.byte	0x1
 1275 04a6 CF01     		.2byte	0x1cf
 1276 04a8 F8020000 		.4byte	0x2f8
 1277 04ac F7020000 		.4byte	.LLST17
 1278 04b0 1B       		.uleb128 0x1b
 1279 04b1 22040000 		.4byte	.LASF53
 1280 04b5 01       		.byte	0x1
 1281 04b6 D001     		.2byte	0x1d0
 1282 04b8 F6010000 		.4byte	0x1f6
 1283 04bc 01       		.uleb128 0x1
 1284 04bd 55       		.byte	0x55
 1285 04be 1A       		.uleb128 0x1a
 1286 04bf 0A000000 		.4byte	.LVL39
 1287 04c3 F8080000 		.4byte	0x8f8
 1288 04c7 1A       		.uleb128 0x1a
 1289 04c8 16000000 		.4byte	.LVL42
 1290 04cc 03090000 		.4byte	0x903
 1291 04d0 00       		.byte	0
 1292 04d1 18       		.uleb128 0x18
 1293 04d2 F5030000 		.4byte	.LASF59
 1294 04d6 01       		.byte	0x1
 1295 04d7 F701     		.2byte	0x1f7
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 42


 1296 04d9 F6010000 		.4byte	0x1f6
 1297 04dd 00000000 		.4byte	.LFB72
 1298 04e1 1C000000 		.4byte	.LFE72-.LFB72
 1299 04e5 01       		.uleb128 0x1
 1300 04e6 9C       		.byte	0x9c
 1301 04e7 65050000 		.4byte	0x565
 1302 04eb 0F       		.uleb128 0xf
 1303 04ec C2040000 		.4byte	.LASF50
 1304 04f0 01       		.byte	0x1
 1305 04f1 F701     		.2byte	0x1f7
 1306 04f3 C0010000 		.4byte	0x1c0
 1307 04f7 15030000 		.4byte	.LLST18
 1308 04fb 1C       		.uleb128 0x1c
 1309 04fc 96040000 		.4byte	.LASF60
 1310 0500 01       		.byte	0x1
 1311 0501 F901     		.2byte	0x1f9
 1312 0503 C7000000 		.4byte	0xc7
 1313 0507 11       		.uleb128 0x11
 1314 0508 E3040000 		.4byte	.LASF47
 1315 050c 01       		.byte	0x1
 1316 050d FA01     		.2byte	0x1fa
 1317 050f 70050000 		.4byte	0x570
 1318 0513 36030000 		.4byte	.LLST19
 1319 0517 1B       		.uleb128 0x1b
 1320 0518 22040000 		.4byte	.LASF53
 1321 051c 01       		.byte	0x1
 1322 051d FB01     		.2byte	0x1fb
 1323 051f F6010000 		.4byte	0x1f6
 1324 0523 01       		.uleb128 0x1
 1325 0524 50       		.byte	0x50
 1326 0525 1D       		.uleb128 0x1d
 1327 0526 24020000 		.4byte	0x224
 1328 052a 00000000 		.4byte	.LBB8
 1329 052e 14000000 		.4byte	.LBE8-.LBB8
 1330 0532 01       		.byte	0x1
 1331 0533 FD01     		.2byte	0x1fd
 1332 0535 4E050000 		.4byte	0x54e
 1333 0539 1E       		.uleb128 0x1e
 1334 053a 00000000 		.4byte	.LBB9
 1335 053e 14000000 		.4byte	.LBE9-.LBB9
 1336 0542 1F       		.uleb128 0x1f
 1337 0543 34020000 		.4byte	0x234
 1338 0547 1F       		.uleb128 0x1f
 1339 0548 3F020000 		.4byte	0x23f
 1340 054c 00       		.byte	0
 1341 054d 00       		.byte	0
 1342 054e 20       		.uleb128 0x20
 1343 054f 0C020000 		.4byte	0x20c
 1344 0553 16000000 		.4byte	.LBB10
 1345 0557 04000000 		.4byte	.LBE10-.LBB10
 1346 055b 01       		.byte	0x1
 1347 055c 0102     		.2byte	0x201
 1348 055e 21       		.uleb128 0x21
 1349 055f 18020000 		.4byte	0x218
 1350 0563 00       		.byte	0
 1351 0564 00       		.byte	0
 1352 0565 08       		.uleb128 0x8
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 43


 1353 0566 04       		.byte	0x4
 1354 0567 6B050000 		.4byte	0x56b
 1355 056b 12       		.uleb128 0x12
 1356 056c 01020000 		.4byte	0x201
 1357 0570 12       		.uleb128 0x12
 1358 0571 65050000 		.4byte	0x565
 1359 0575 18       		.uleb128 0x18
 1360 0576 0F040000 		.4byte	.LASF61
 1361 057a 01       		.byte	0x1
 1362 057b 0702     		.2byte	0x207
 1363 057d F6010000 		.4byte	0x1f6
 1364 0581 00000000 		.4byte	.LFB73
 1365 0585 6E000000 		.4byte	.LFE73-.LFB73
 1366 0589 01       		.uleb128 0x1
 1367 058a 9C       		.byte	0x9c
 1368 058b 59060000 		.4byte	0x659
 1369 058f 0F       		.uleb128 0xf
 1370 0590 C2040000 		.4byte	.LASF50
 1371 0594 01       		.byte	0x1
 1372 0595 0702     		.2byte	0x207
 1373 0597 C0010000 		.4byte	0x1c0
 1374 059b 57030000 		.4byte	.LLST20
 1375 059f 0F       		.uleb128 0xf
 1376 05a0 17060000 		.4byte	.LASF62
 1377 05a4 01       		.byte	0x1
 1378 05a5 0702     		.2byte	0x207
 1379 05a7 A2020000 		.4byte	0x2a2
 1380 05ab 75030000 		.4byte	.LLST21
 1381 05af 11       		.uleb128 0x11
 1382 05b0 EF010000 		.4byte	.LASF63
 1383 05b4 01       		.byte	0x1
 1384 05b5 0902     		.2byte	0x209
 1385 05b7 AF010000 		.4byte	0x1af
 1386 05bb A1030000 		.4byte	.LLST22
 1387 05bf 11       		.uleb128 0x11
 1388 05c0 9F030000 		.4byte	.LASF22
 1389 05c4 01       		.byte	0x1
 1390 05c5 0902     		.2byte	0x209
 1391 05c7 AF010000 		.4byte	0x1af
 1392 05cb BF030000 		.4byte	.LLST23
 1393 05cf 1B       		.uleb128 0x1b
 1394 05d0 70000000 		.4byte	.LASF64
 1395 05d4 01       		.byte	0x1
 1396 05d5 0A02     		.2byte	0x20a
 1397 05d7 59060000 		.4byte	0x659
 1398 05db 01       		.uleb128 0x1
 1399 05dc 56       		.byte	0x56
 1400 05dd 11       		.uleb128 0x11
 1401 05de D9010000 		.4byte	.LASF65
 1402 05e2 01       		.byte	0x1
 1403 05e3 0B02     		.2byte	0x20b
 1404 05e5 64060000 		.4byte	0x664
 1405 05e9 D2030000 		.4byte	.LLST24
 1406 05ed 11       		.uleb128 0x11
 1407 05ee CE040000 		.4byte	.LASF58
 1408 05f2 01       		.byte	0x1
 1409 05f3 0C02     		.2byte	0x20c
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 44


 1410 05f5 F6010000 		.4byte	0x1f6
 1411 05f9 F4030000 		.4byte	.LLST25
 1412 05fd 11       		.uleb128 0x11
 1413 05fe 60010000 		.4byte	.LASF66
 1414 0602 01       		.byte	0x1
 1415 0603 0C02     		.2byte	0x20c
 1416 0605 F6010000 		.4byte	0x1f6
 1417 0609 13040000 		.4byte	.LLST26
 1418 060d 11       		.uleb128 0x11
 1419 060e E7030000 		.4byte	.LASF54
 1420 0612 01       		.byte	0x1
 1421 0613 0C02     		.2byte	0x20c
 1422 0615 F6010000 		.4byte	0x1f6
 1423 0619 31040000 		.4byte	.LLST27
 1424 061d 11       		.uleb128 0x11
 1425 061e E3040000 		.4byte	.LASF47
 1426 0622 01       		.byte	0x1
 1427 0623 0D02     		.2byte	0x20d
 1428 0625 F8020000 		.4byte	0x2f8
 1429 0629 4B040000 		.4byte	.LLST28
 1430 062d 11       		.uleb128 0x11
 1431 062e B6040000 		.4byte	.LASF67
 1432 0632 01       		.byte	0x1
 1433 0633 0E02     		.2byte	0x20e
 1434 0635 BC000000 		.4byte	0xbc
 1435 0639 69040000 		.4byte	.LLST29
 1436 063d 1A       		.uleb128 0x1a
 1437 063e 0E000000 		.4byte	.LVL48
 1438 0642 D4080000 		.4byte	0x8d4
 1439 0646 1A       		.uleb128 0x1a
 1440 0647 58000000 		.4byte	.LVL58
 1441 064b 0E090000 		.4byte	0x90e
 1442 064f 1A       		.uleb128 0x1a
 1443 0650 6A000000 		.4byte	.LVL61
 1444 0654 E0080000 		.4byte	0x8e0
 1445 0658 00       		.byte	0
 1446 0659 08       		.uleb128 0x8
 1447 065a 04       		.byte	0x4
 1448 065b 5F060000 		.4byte	0x65f
 1449 065f 12       		.uleb128 0x12
 1450 0660 63010000 		.4byte	0x163
 1451 0664 08       		.uleb128 0x8
 1452 0665 04       		.byte	0x4
 1453 0666 6A060000 		.4byte	0x66a
 1454 066a 12       		.uleb128 0x12
 1455 066b B5010000 		.4byte	0x1b5
 1456 066f 13       		.uleb128 0x13
 1457 0670 26020000 		.4byte	.LASF68
 1458 0674 01       		.byte	0x1
 1459 0675 BF       		.byte	0xbf
 1460 0676 F6010000 		.4byte	0x1f6
 1461 067a 00000000 		.4byte	.LFB69
 1462 067e 90000000 		.4byte	.LFE69-.LFB69
 1463 0682 01       		.uleb128 0x1
 1464 0683 9C       		.byte	0x9c
 1465 0684 7B070000 		.4byte	0x77b
 1466 0688 22       		.uleb128 0x22
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 45


 1467 0689 C2040000 		.4byte	.LASF50
 1468 068d 01       		.byte	0x1
 1469 068e BF       		.byte	0xbf
 1470 068f C0010000 		.4byte	0x1c0
 1471 0693 94040000 		.4byte	.LLST30
 1472 0697 22       		.uleb128 0x22
 1473 0698 17060000 		.4byte	.LASF62
 1474 069c 01       		.byte	0x1
 1475 069d BF       		.byte	0xbf
 1476 069e A2020000 		.4byte	0x2a2
 1477 06a2 C0040000 		.4byte	.LLST31
 1478 06a6 22       		.uleb128 0x22
 1479 06a7 88010000 		.4byte	.LASF44
 1480 06ab 01       		.byte	0x1
 1481 06ac BF       		.byte	0xbf
 1482 06ad A2020000 		.4byte	0x2a2
 1483 06b1 EC040000 		.4byte	.LLST32
 1484 06b5 22       		.uleb128 0x22
 1485 06b6 2D010000 		.4byte	.LASF52
 1486 06ba 01       		.byte	0x1
 1487 06bb BF       		.byte	0xbf
 1488 06bc D2000000 		.4byte	0xd2
 1489 06c0 18050000 		.4byte	.LLST33
 1490 06c4 14       		.uleb128 0x14
 1491 06c5 A6030000 		.4byte	.LASF69
 1492 06c9 01       		.byte	0x1
 1493 06ca C1       		.byte	0xc1
 1494 06cb F6010000 		.4byte	0x1f6
 1495 06cf 4D050000 		.4byte	.LLST34
 1496 06d3 14       		.uleb128 0x14
 1497 06d4 22040000 		.4byte	.LASF53
 1498 06d8 01       		.byte	0x1
 1499 06d9 C1       		.byte	0xc1
 1500 06da F6010000 		.4byte	0x1f6
 1501 06de 60050000 		.4byte	.LLST35
 1502 06e2 14       		.uleb128 0x14
 1503 06e3 E3040000 		.4byte	.LASF47
 1504 06e7 01       		.byte	0x1
 1505 06e8 C2       		.byte	0xc2
 1506 06e9 F8020000 		.4byte	0x2f8
 1507 06ed AB050000 		.4byte	.LLST36
 1508 06f1 14       		.uleb128 0x14
 1509 06f2 07060000 		.4byte	.LASF55
 1510 06f6 01       		.byte	0x1
 1511 06f7 C3       		.byte	0xc3
 1512 06f8 BC000000 		.4byte	0xbc
 1513 06fc D7050000 		.4byte	.LLST37
 1514 0700 14       		.uleb128 0x14
 1515 0701 F7040000 		.4byte	.LASF56
 1516 0705 01       		.byte	0x1
 1517 0706 C4       		.byte	0xc4
 1518 0707 BC000000 		.4byte	0xbc
 1519 070b EA050000 		.4byte	.LLST38
 1520 070f 1A       		.uleb128 0x1a
 1521 0710 10000000 		.4byte	.LVL64
 1522 0714 D4080000 		.4byte	0x8d4
 1523 0718 15       		.uleb128 0x15
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 46


 1524 0719 1C000000 		.4byte	.LVL66
 1525 071d 75050000 		.4byte	0x575
 1526 0721 32070000 		.4byte	0x732
 1527 0725 16       		.uleb128 0x16
 1528 0726 01       		.uleb128 0x1
 1529 0727 50       		.byte	0x50
 1530 0728 02       		.uleb128 0x2
 1531 0729 75       		.byte	0x75
 1532 072a 00       		.sleb128 0
 1533 072b 16       		.uleb128 0x16
 1534 072c 01       		.uleb128 0x1
 1535 072d 51       		.byte	0x51
 1536 072e 02       		.uleb128 0x2
 1537 072f 74       		.byte	0x74
 1538 0730 00       		.sleb128 0
 1539 0731 00       		.byte	0
 1540 0732 15       		.uleb128 0x15
 1541 0733 40000000 		.4byte	.LVL71
 1542 0737 C8080000 		.4byte	0x8c8
 1543 073b 56070000 		.4byte	0x756
 1544 073f 16       		.uleb128 0x16
 1545 0740 01       		.uleb128 0x1
 1546 0741 50       		.byte	0x50
 1547 0742 02       		.uleb128 0x2
 1548 0743 75       		.byte	0x75
 1549 0744 04       		.sleb128 4
 1550 0745 16       		.uleb128 0x16
 1551 0746 01       		.uleb128 0x1
 1552 0747 51       		.byte	0x51
 1553 0748 06       		.uleb128 0x6
 1554 0749 77       		.byte	0x77
 1555 074a 00       		.sleb128 0
 1556 074b 44       		.byte	0x44
 1557 074c 46       		.byte	0x46
 1558 074d 24       		.byte	0x24
 1559 074e 21       		.byte	0x21
 1560 074f 16       		.uleb128 0x16
 1561 0750 01       		.uleb128 0x1
 1562 0751 52       		.byte	0x52
 1563 0752 02       		.uleb128 0x2
 1564 0753 76       		.byte	0x76
 1565 0754 00       		.sleb128 0
 1566 0755 00       		.byte	0
 1567 0756 1A       		.uleb128 0x1a
 1568 0757 4A000000 		.4byte	.LVL74
 1569 075b E0080000 		.4byte	0x8e0
 1570 075f 1A       		.uleb128 0x1a
 1571 0760 62000000 		.4byte	.LVL75
 1572 0764 EC080000 		.4byte	0x8ec
 1573 0768 1A       		.uleb128 0x1a
 1574 0769 6E000000 		.4byte	.LVL77
 1575 076d F8080000 		.4byte	0x8f8
 1576 0771 1A       		.uleb128 0x1a
 1577 0772 80000000 		.4byte	.LVL80
 1578 0776 03090000 		.4byte	0x903
 1579 077a 00       		.byte	0
 1580 077b 23       		.uleb128 0x23
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 47


 1581 077c 70010000 		.4byte	.LASF71
 1582 0780 01       		.byte	0x1
 1583 0781 6502     		.2byte	0x265
 1584 0783 00000000 		.4byte	.LFB74
 1585 0787 26000000 		.4byte	.LFE74-.LFB74
 1586 078b 01       		.uleb128 0x1
 1587 078c 9C       		.byte	0x9c
 1588 078d FD070000 		.4byte	0x7fd
 1589 0791 0F       		.uleb128 0xf
 1590 0792 C2040000 		.4byte	.LASF50
 1591 0796 01       		.byte	0x1
 1592 0797 6502     		.2byte	0x265
 1593 0799 C0010000 		.4byte	0x1c0
 1594 079d FE050000 		.4byte	.LLST39
 1595 07a1 11       		.uleb128 0x11
 1596 07a2 E3040000 		.4byte	.LASF47
 1597 07a6 01       		.byte	0x1
 1598 07a7 6702     		.2byte	0x267
 1599 07a9 F8020000 		.4byte	0x2f8
 1600 07ad 1C060000 		.4byte	.LLST40
 1601 07b1 11       		.uleb128 0x11
 1602 07b2 E1050000 		.4byte	.LASF70
 1603 07b6 01       		.byte	0x1
 1604 07b7 6802     		.2byte	0x268
 1605 07b9 64060000 		.4byte	0x664
 1606 07bd 3A060000 		.4byte	.LLST41
 1607 07c1 1A       		.uleb128 0x1a
 1608 07c2 08000000 		.4byte	.LVL85
 1609 07c6 D4080000 		.4byte	0x8d4
 1610 07ca 15       		.uleb128 0x15
 1611 07cb 14000000 		.4byte	.LVL86
 1612 07cf 0E090000 		.4byte	0x90e
 1613 07d3 DF070000 		.4byte	0x7df
 1614 07d7 16       		.uleb128 0x16
 1615 07d8 01       		.uleb128 0x1
 1616 07d9 51       		.byte	0x51
 1617 07da 03       		.uleb128 0x3
 1618 07db 40       		.byte	0x40
 1619 07dc 45       		.byte	0x45
 1620 07dd 24       		.byte	0x24
 1621 07de 00       		.byte	0
 1622 07df 15       		.uleb128 0x15
 1623 07e0 20000000 		.4byte	.LVL87
 1624 07e4 1A090000 		.4byte	0x91a
 1625 07e8 F3070000 		.4byte	0x7f3
 1626 07ec 16       		.uleb128 0x16
 1627 07ed 01       		.uleb128 0x1
 1628 07ee 50       		.byte	0x50
 1629 07ef 02       		.uleb128 0x2
 1630 07f0 74       		.byte	0x74
 1631 07f1 00       		.sleb128 0
 1632 07f2 00       		.byte	0
 1633 07f3 1A       		.uleb128 0x1a
 1634 07f4 24000000 		.4byte	.LVL88
 1635 07f8 E0080000 		.4byte	0x8e0
 1636 07fc 00       		.byte	0
 1637 07fd 23       		.uleb128 0x23
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 48


 1638 07fe 96050000 		.4byte	.LASF72
 1639 0802 01       		.byte	0x1
 1640 0803 9102     		.2byte	0x291
 1641 0805 00000000 		.4byte	.LFB75
 1642 0809 08000000 		.4byte	.LFE75-.LFB75
 1643 080d 01       		.uleb128 0x1
 1644 080e 9C       		.byte	0x9c
 1645 080f 4C080000 		.4byte	0x84c
 1646 0813 0F       		.uleb128 0xf
 1647 0814 E3020000 		.4byte	.LASF73
 1648 0818 01       		.byte	0x1
 1649 0819 9102     		.2byte	0x291
 1650 081b 8F000000 		.4byte	0x8f
 1651 081f 5C060000 		.4byte	.LLST42
 1652 0823 0F       		.uleb128 0xf
 1653 0824 05020000 		.4byte	.LASF74
 1654 0828 01       		.byte	0x1
 1655 0829 9102     		.2byte	0x291
 1656 082b 4C080000 		.4byte	0x84c
 1657 082f 7D060000 		.4byte	.LLST43
 1658 0833 17       		.uleb128 0x17
 1659 0834 06000000 		.4byte	.LVL90
 1660 0838 75050000 		.4byte	0x575
 1661 083c 16       		.uleb128 0x16
 1662 083d 01       		.uleb128 0x1
 1663 083e 50       		.byte	0x50
 1664 083f 03       		.uleb128 0x3
 1665 0840 F3       		.byte	0xf3
 1666 0841 01       		.uleb128 0x1
 1667 0842 50       		.byte	0x50
 1668 0843 16       		.uleb128 0x16
 1669 0844 01       		.uleb128 0x1
 1670 0845 51       		.byte	0x51
 1671 0846 03       		.uleb128 0x3
 1672 0847 F3       		.byte	0xf3
 1673 0848 01       		.uleb128 0x1
 1674 0849 51       		.byte	0x51
 1675 084a 00       		.byte	0
 1676 084b 00       		.byte	0
 1677 084c 12       		.uleb128 0x12
 1678 084d A3000000 		.4byte	0xa3
 1679 0851 23       		.uleb128 0x23
 1680 0852 BC010000 		.4byte	.LASF75
 1681 0856 01       		.byte	0x1
 1682 0857 9902     		.2byte	0x299
 1683 0859 00000000 		.4byte	.LFB76
 1684 085d 08000000 		.4byte	.LFE76-.LFB76
 1685 0861 01       		.uleb128 0x1
 1686 0862 9C       		.byte	0x9c
 1687 0863 A0080000 		.4byte	0x8a0
 1688 0867 0F       		.uleb128 0xf
 1689 0868 E3020000 		.4byte	.LASF73
 1690 086c 01       		.byte	0x1
 1691 086d 9902     		.2byte	0x299
 1692 086f 8F000000 		.4byte	0x8f
 1693 0873 9E060000 		.4byte	.LLST44
 1694 0877 0F       		.uleb128 0xf
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 49


 1695 0878 23060000 		.4byte	.LASF76
 1696 087c 01       		.byte	0x1
 1697 087d 9902     		.2byte	0x299
 1698 087f 4C080000 		.4byte	0x84c
 1699 0883 BF060000 		.4byte	.LLST45
 1700 0887 17       		.uleb128 0x17
 1701 0888 06000000 		.4byte	.LVL92
 1702 088c 66040000 		.4byte	0x466
 1703 0890 16       		.uleb128 0x16
 1704 0891 01       		.uleb128 0x1
 1705 0892 50       		.byte	0x50
 1706 0893 03       		.uleb128 0x3
 1707 0894 F3       		.byte	0xf3
 1708 0895 01       		.uleb128 0x1
 1709 0896 50       		.byte	0x50
 1710 0897 16       		.uleb128 0x16
 1711 0898 01       		.uleb128 0x1
 1712 0899 51       		.byte	0x51
 1713 089a 03       		.uleb128 0x3
 1714 089b F3       		.byte	0xf3
 1715 089c 01       		.uleb128 0x1
 1716 089d 51       		.byte	0x51
 1717 089e 00       		.byte	0
 1718 089f 00       		.byte	0
 1719 08a0 24       		.uleb128 0x24
 1720 08a1 92030000 		.4byte	.LASF94
 1721 08a5 09       		.byte	0x9
 1722 08a6 1207     		.2byte	0x712
 1723 08a8 AC080000 		.4byte	0x8ac
 1724 08ac 09       		.uleb128 0x9
 1725 08ad 98000000 		.4byte	0x98
 1726 08b1 25       		.uleb128 0x25
 1727 08b2 D4050000 		.4byte	.LASF77
 1728 08b6 D4050000 		.4byte	.LASF77
 1729 08ba 07       		.byte	0x7
 1730 08bb 89       		.byte	0x89
 1731 08bc 26       		.uleb128 0x26
 1732 08bd 7A000000 		.4byte	.LASF78
 1733 08c1 7A000000 		.4byte	.LASF78
 1734 08c5 05       		.byte	0x5
 1735 08c6 5901     		.2byte	0x159
 1736 08c8 26       		.uleb128 0x26
 1737 08c9 41000000 		.4byte	.LASF79
 1738 08cd 41000000 		.4byte	.LASF79
 1739 08d1 08       		.byte	0x8
 1740 08d2 D108     		.2byte	0x8d1
 1741 08d4 26       		.uleb128 0x26
 1742 08d5 F7050000 		.4byte	.LASF80
 1743 08d9 F7050000 		.4byte	.LASF80
 1744 08dd 08       		.byte	0x8
 1745 08de 0205     		.2byte	0x502
 1746 08e0 26       		.uleb128 0x26
 1747 08e1 33030000 		.4byte	.LASF81
 1748 08e5 33030000 		.4byte	.LASF81
 1749 08e9 08       		.byte	0x8
 1750 08ea 3805     		.2byte	0x538
 1751 08ec 26       		.uleb128 0x26
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 50


 1752 08ed 72040000 		.4byte	.LASF82
 1753 08f1 72040000 		.4byte	.LASF82
 1754 08f5 08       		.byte	0x8
 1755 08f6 0909     		.2byte	0x909
 1756 08f8 25       		.uleb128 0x25
 1757 08f9 55030000 		.4byte	.LASF83
 1758 08fd 55030000 		.4byte	.LASF83
 1759 0901 02       		.byte	0x2
 1760 0902 61       		.byte	0x61
 1761 0903 25       		.uleb128 0x25
 1762 0904 C5030000 		.4byte	.LASF84
 1763 0908 C5030000 		.4byte	.LASF84
 1764 090c 02       		.byte	0x2
 1765 090d 62       		.byte	0x62
 1766 090e 26       		.uleb128 0x26
 1767 090f 00000000 		.4byte	.LASF85
 1768 0913 00000000 		.4byte	.LASF85
 1769 0917 08       		.byte	0x8
 1770 0918 F908     		.2byte	0x8f9
 1771 091a 25       		.uleb128 0x25
 1772 091b 58040000 		.4byte	.LASF86
 1773 091f 58040000 		.4byte	.LASF86
 1774 0923 07       		.byte	0x7
 1775 0924 8A       		.byte	0x8a
 1776 0925 00       		.byte	0
 1777              		.section	.debug_abbrev,"",%progbits
 1778              	.Ldebug_abbrev0:
 1779 0000 01       		.uleb128 0x1
 1780 0001 11       		.uleb128 0x11
 1781 0002 01       		.byte	0x1
 1782 0003 25       		.uleb128 0x25
 1783 0004 0E       		.uleb128 0xe
 1784 0005 13       		.uleb128 0x13
 1785 0006 0B       		.uleb128 0xb
 1786 0007 03       		.uleb128 0x3
 1787 0008 0E       		.uleb128 0xe
 1788 0009 1B       		.uleb128 0x1b
 1789 000a 0E       		.uleb128 0xe
 1790 000b 55       		.uleb128 0x55
 1791 000c 17       		.uleb128 0x17
 1792 000d 11       		.uleb128 0x11
 1793 000e 01       		.uleb128 0x1
 1794 000f 10       		.uleb128 0x10
 1795 0010 17       		.uleb128 0x17
 1796 0011 00       		.byte	0
 1797 0012 00       		.byte	0
 1798 0013 02       		.uleb128 0x2
 1799 0014 24       		.uleb128 0x24
 1800 0015 00       		.byte	0
 1801 0016 0B       		.uleb128 0xb
 1802 0017 0B       		.uleb128 0xb
 1803 0018 3E       		.uleb128 0x3e
 1804 0019 0B       		.uleb128 0xb
 1805 001a 03       		.uleb128 0x3
 1806 001b 0E       		.uleb128 0xe
 1807 001c 00       		.byte	0
 1808 001d 00       		.byte	0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 51


 1809 001e 03       		.uleb128 0x3
 1810 001f 24       		.uleb128 0x24
 1811 0020 00       		.byte	0
 1812 0021 0B       		.uleb128 0xb
 1813 0022 0B       		.uleb128 0xb
 1814 0023 3E       		.uleb128 0x3e
 1815 0024 0B       		.uleb128 0xb
 1816 0025 03       		.uleb128 0x3
 1817 0026 08       		.uleb128 0x8
 1818 0027 00       		.byte	0
 1819 0028 00       		.byte	0
 1820 0029 04       		.uleb128 0x4
 1821 002a 16       		.uleb128 0x16
 1822 002b 00       		.byte	0
 1823 002c 03       		.uleb128 0x3
 1824 002d 0E       		.uleb128 0xe
 1825 002e 3A       		.uleb128 0x3a
 1826 002f 0B       		.uleb128 0xb
 1827 0030 3B       		.uleb128 0x3b
 1828 0031 0B       		.uleb128 0xb
 1829 0032 49       		.uleb128 0x49
 1830 0033 13       		.uleb128 0x13
 1831 0034 00       		.byte	0
 1832 0035 00       		.byte	0
 1833 0036 05       		.uleb128 0x5
 1834 0037 0F       		.uleb128 0xf
 1835 0038 00       		.byte	0
 1836 0039 0B       		.uleb128 0xb
 1837 003a 0B       		.uleb128 0xb
 1838 003b 00       		.byte	0
 1839 003c 00       		.byte	0
 1840 003d 06       		.uleb128 0x6
 1841 003e 13       		.uleb128 0x13
 1842 003f 01       		.byte	0x1
 1843 0040 03       		.uleb128 0x3
 1844 0041 0E       		.uleb128 0xe
 1845 0042 0B       		.uleb128 0xb
 1846 0043 0B       		.uleb128 0xb
 1847 0044 3A       		.uleb128 0x3a
 1848 0045 0B       		.uleb128 0xb
 1849 0046 3B       		.uleb128 0x3b
 1850 0047 0B       		.uleb128 0xb
 1851 0048 01       		.uleb128 0x1
 1852 0049 13       		.uleb128 0x13
 1853 004a 00       		.byte	0
 1854 004b 00       		.byte	0
 1855 004c 07       		.uleb128 0x7
 1856 004d 0D       		.uleb128 0xd
 1857 004e 00       		.byte	0
 1858 004f 03       		.uleb128 0x3
 1859 0050 0E       		.uleb128 0xe
 1860 0051 3A       		.uleb128 0x3a
 1861 0052 0B       		.uleb128 0xb
 1862 0053 3B       		.uleb128 0x3b
 1863 0054 0B       		.uleb128 0xb
 1864 0055 49       		.uleb128 0x49
 1865 0056 13       		.uleb128 0x13
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 52


 1866 0057 38       		.uleb128 0x38
 1867 0058 0B       		.uleb128 0xb
 1868 0059 00       		.byte	0
 1869 005a 00       		.byte	0
 1870 005b 08       		.uleb128 0x8
 1871 005c 0F       		.uleb128 0xf
 1872 005d 00       		.byte	0
 1873 005e 0B       		.uleb128 0xb
 1874 005f 0B       		.uleb128 0xb
 1875 0060 49       		.uleb128 0x49
 1876 0061 13       		.uleb128 0x13
 1877 0062 00       		.byte	0
 1878 0063 00       		.byte	0
 1879 0064 09       		.uleb128 0x9
 1880 0065 35       		.uleb128 0x35
 1881 0066 00       		.byte	0
 1882 0067 49       		.uleb128 0x49
 1883 0068 13       		.uleb128 0x13
 1884 0069 00       		.byte	0
 1885 006a 00       		.byte	0
 1886 006b 0A       		.uleb128 0xa
 1887 006c 2E       		.uleb128 0x2e
 1888 006d 01       		.byte	0x1
 1889 006e 03       		.uleb128 0x3
 1890 006f 0E       		.uleb128 0xe
 1891 0070 3A       		.uleb128 0x3a
 1892 0071 0B       		.uleb128 0xb
 1893 0072 3B       		.uleb128 0x3b
 1894 0073 0B       		.uleb128 0xb
 1895 0074 27       		.uleb128 0x27
 1896 0075 19       		.uleb128 0x19
 1897 0076 20       		.uleb128 0x20
 1898 0077 0B       		.uleb128 0xb
 1899 0078 01       		.uleb128 0x1
 1900 0079 13       		.uleb128 0x13
 1901 007a 00       		.byte	0
 1902 007b 00       		.byte	0
 1903 007c 0B       		.uleb128 0xb
 1904 007d 05       		.uleb128 0x5
 1905 007e 00       		.byte	0
 1906 007f 03       		.uleb128 0x3
 1907 0080 0E       		.uleb128 0xe
 1908 0081 3A       		.uleb128 0x3a
 1909 0082 0B       		.uleb128 0xb
 1910 0083 3B       		.uleb128 0x3b
 1911 0084 0B       		.uleb128 0xb
 1912 0085 49       		.uleb128 0x49
 1913 0086 13       		.uleb128 0x13
 1914 0087 00       		.byte	0
 1915 0088 00       		.byte	0
 1916 0089 0C       		.uleb128 0xc
 1917 008a 2E       		.uleb128 0x2e
 1918 008b 01       		.byte	0x1
 1919 008c 03       		.uleb128 0x3
 1920 008d 0E       		.uleb128 0xe
 1921 008e 3A       		.uleb128 0x3a
 1922 008f 0B       		.uleb128 0xb
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 53


 1923 0090 3B       		.uleb128 0x3b
 1924 0091 0B       		.uleb128 0xb
 1925 0092 27       		.uleb128 0x27
 1926 0093 19       		.uleb128 0x19
 1927 0094 49       		.uleb128 0x49
 1928 0095 13       		.uleb128 0x13
 1929 0096 20       		.uleb128 0x20
 1930 0097 0B       		.uleb128 0xb
 1931 0098 01       		.uleb128 0x1
 1932 0099 13       		.uleb128 0x13
 1933 009a 00       		.byte	0
 1934 009b 00       		.byte	0
 1935 009c 0D       		.uleb128 0xd
 1936 009d 34       		.uleb128 0x34
 1937 009e 00       		.byte	0
 1938 009f 03       		.uleb128 0x3
 1939 00a0 0E       		.uleb128 0xe
 1940 00a1 3A       		.uleb128 0x3a
 1941 00a2 0B       		.uleb128 0xb
 1942 00a3 3B       		.uleb128 0x3b
 1943 00a4 0B       		.uleb128 0xb
 1944 00a5 49       		.uleb128 0x49
 1945 00a6 13       		.uleb128 0x13
 1946 00a7 00       		.byte	0
 1947 00a8 00       		.byte	0
 1948 00a9 0E       		.uleb128 0xe
 1949 00aa 2E       		.uleb128 0x2e
 1950 00ab 01       		.byte	0x1
 1951 00ac 03       		.uleb128 0x3
 1952 00ad 0E       		.uleb128 0xe
 1953 00ae 3A       		.uleb128 0x3a
 1954 00af 0B       		.uleb128 0xb
 1955 00b0 3B       		.uleb128 0x3b
 1956 00b1 05       		.uleb128 0x5
 1957 00b2 27       		.uleb128 0x27
 1958 00b3 19       		.uleb128 0x19
 1959 00b4 49       		.uleb128 0x49
 1960 00b5 13       		.uleb128 0x13
 1961 00b6 11       		.uleb128 0x11
 1962 00b7 01       		.uleb128 0x1
 1963 00b8 12       		.uleb128 0x12
 1964 00b9 06       		.uleb128 0x6
 1965 00ba 40       		.uleb128 0x40
 1966 00bb 18       		.uleb128 0x18
 1967 00bc 9742     		.uleb128 0x2117
 1968 00be 19       		.uleb128 0x19
 1969 00bf 01       		.uleb128 0x1
 1970 00c0 13       		.uleb128 0x13
 1971 00c1 00       		.byte	0
 1972 00c2 00       		.byte	0
 1973 00c3 0F       		.uleb128 0xf
 1974 00c4 05       		.uleb128 0x5
 1975 00c5 00       		.byte	0
 1976 00c6 03       		.uleb128 0x3
 1977 00c7 0E       		.uleb128 0xe
 1978 00c8 3A       		.uleb128 0x3a
 1979 00c9 0B       		.uleb128 0xb
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 54


 1980 00ca 3B       		.uleb128 0x3b
 1981 00cb 05       		.uleb128 0x5
 1982 00cc 49       		.uleb128 0x49
 1983 00cd 13       		.uleb128 0x13
 1984 00ce 02       		.uleb128 0x2
 1985 00cf 17       		.uleb128 0x17
 1986 00d0 00       		.byte	0
 1987 00d1 00       		.byte	0
 1988 00d2 10       		.uleb128 0x10
 1989 00d3 05       		.uleb128 0x5
 1990 00d4 00       		.byte	0
 1991 00d5 03       		.uleb128 0x3
 1992 00d6 0E       		.uleb128 0xe
 1993 00d7 3A       		.uleb128 0x3a
 1994 00d8 0B       		.uleb128 0xb
 1995 00d9 3B       		.uleb128 0x3b
 1996 00da 05       		.uleb128 0x5
 1997 00db 49       		.uleb128 0x49
 1998 00dc 13       		.uleb128 0x13
 1999 00dd 02       		.uleb128 0x2
 2000 00de 18       		.uleb128 0x18
 2001 00df 00       		.byte	0
 2002 00e0 00       		.byte	0
 2003 00e1 11       		.uleb128 0x11
 2004 00e2 34       		.uleb128 0x34
 2005 00e3 00       		.byte	0
 2006 00e4 03       		.uleb128 0x3
 2007 00e5 0E       		.uleb128 0xe
 2008 00e6 3A       		.uleb128 0x3a
 2009 00e7 0B       		.uleb128 0xb
 2010 00e8 3B       		.uleb128 0x3b
 2011 00e9 05       		.uleb128 0x5
 2012 00ea 49       		.uleb128 0x49
 2013 00eb 13       		.uleb128 0x13
 2014 00ec 02       		.uleb128 0x2
 2015 00ed 17       		.uleb128 0x17
 2016 00ee 00       		.byte	0
 2017 00ef 00       		.byte	0
 2018 00f0 12       		.uleb128 0x12
 2019 00f1 26       		.uleb128 0x26
 2020 00f2 00       		.byte	0
 2021 00f3 49       		.uleb128 0x49
 2022 00f4 13       		.uleb128 0x13
 2023 00f5 00       		.byte	0
 2024 00f6 00       		.byte	0
 2025 00f7 13       		.uleb128 0x13
 2026 00f8 2E       		.uleb128 0x2e
 2027 00f9 01       		.byte	0x1
 2028 00fa 3F       		.uleb128 0x3f
 2029 00fb 19       		.uleb128 0x19
 2030 00fc 03       		.uleb128 0x3
 2031 00fd 0E       		.uleb128 0xe
 2032 00fe 3A       		.uleb128 0x3a
 2033 00ff 0B       		.uleb128 0xb
 2034 0100 3B       		.uleb128 0x3b
 2035 0101 0B       		.uleb128 0xb
 2036 0102 27       		.uleb128 0x27
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 55


 2037 0103 19       		.uleb128 0x19
 2038 0104 49       		.uleb128 0x49
 2039 0105 13       		.uleb128 0x13
 2040 0106 11       		.uleb128 0x11
 2041 0107 01       		.uleb128 0x1
 2042 0108 12       		.uleb128 0x12
 2043 0109 06       		.uleb128 0x6
 2044 010a 40       		.uleb128 0x40
 2045 010b 18       		.uleb128 0x18
 2046 010c 9742     		.uleb128 0x2117
 2047 010e 19       		.uleb128 0x19
 2048 010f 01       		.uleb128 0x1
 2049 0110 13       		.uleb128 0x13
 2050 0111 00       		.byte	0
 2051 0112 00       		.byte	0
 2052 0113 14       		.uleb128 0x14
 2053 0114 34       		.uleb128 0x34
 2054 0115 00       		.byte	0
 2055 0116 03       		.uleb128 0x3
 2056 0117 0E       		.uleb128 0xe
 2057 0118 3A       		.uleb128 0x3a
 2058 0119 0B       		.uleb128 0xb
 2059 011a 3B       		.uleb128 0x3b
 2060 011b 0B       		.uleb128 0xb
 2061 011c 49       		.uleb128 0x49
 2062 011d 13       		.uleb128 0x13
 2063 011e 02       		.uleb128 0x2
 2064 011f 17       		.uleb128 0x17
 2065 0120 00       		.byte	0
 2066 0121 00       		.byte	0
 2067 0122 15       		.uleb128 0x15
 2068 0123 898201   		.uleb128 0x4109
 2069 0126 01       		.byte	0x1
 2070 0127 11       		.uleb128 0x11
 2071 0128 01       		.uleb128 0x1
 2072 0129 31       		.uleb128 0x31
 2073 012a 13       		.uleb128 0x13
 2074 012b 01       		.uleb128 0x1
 2075 012c 13       		.uleb128 0x13
 2076 012d 00       		.byte	0
 2077 012e 00       		.byte	0
 2078 012f 16       		.uleb128 0x16
 2079 0130 8A8201   		.uleb128 0x410a
 2080 0133 00       		.byte	0
 2081 0134 02       		.uleb128 0x2
 2082 0135 18       		.uleb128 0x18
 2083 0136 9142     		.uleb128 0x2111
 2084 0138 18       		.uleb128 0x18
 2085 0139 00       		.byte	0
 2086 013a 00       		.byte	0
 2087 013b 17       		.uleb128 0x17
 2088 013c 898201   		.uleb128 0x4109
 2089 013f 01       		.byte	0x1
 2090 0140 11       		.uleb128 0x11
 2091 0141 01       		.uleb128 0x1
 2092 0142 31       		.uleb128 0x31
 2093 0143 13       		.uleb128 0x13
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 56


 2094 0144 00       		.byte	0
 2095 0145 00       		.byte	0
 2096 0146 18       		.uleb128 0x18
 2097 0147 2E       		.uleb128 0x2e
 2098 0148 01       		.byte	0x1
 2099 0149 3F       		.uleb128 0x3f
 2100 014a 19       		.uleb128 0x19
 2101 014b 03       		.uleb128 0x3
 2102 014c 0E       		.uleb128 0xe
 2103 014d 3A       		.uleb128 0x3a
 2104 014e 0B       		.uleb128 0xb
 2105 014f 3B       		.uleb128 0x3b
 2106 0150 05       		.uleb128 0x5
 2107 0151 27       		.uleb128 0x27
 2108 0152 19       		.uleb128 0x19
 2109 0153 49       		.uleb128 0x49
 2110 0154 13       		.uleb128 0x13
 2111 0155 11       		.uleb128 0x11
 2112 0156 01       		.uleb128 0x1
 2113 0157 12       		.uleb128 0x12
 2114 0158 06       		.uleb128 0x6
 2115 0159 40       		.uleb128 0x40
 2116 015a 18       		.uleb128 0x18
 2117 015b 9742     		.uleb128 0x2117
 2118 015d 19       		.uleb128 0x19
 2119 015e 01       		.uleb128 0x1
 2120 015f 13       		.uleb128 0x13
 2121 0160 00       		.byte	0
 2122 0161 00       		.byte	0
 2123 0162 19       		.uleb128 0x19
 2124 0163 0B       		.uleb128 0xb
 2125 0164 01       		.byte	0x1
 2126 0165 55       		.uleb128 0x55
 2127 0166 17       		.uleb128 0x17
 2128 0167 01       		.uleb128 0x1
 2129 0168 13       		.uleb128 0x13
 2130 0169 00       		.byte	0
 2131 016a 00       		.byte	0
 2132 016b 1A       		.uleb128 0x1a
 2133 016c 898201   		.uleb128 0x4109
 2134 016f 00       		.byte	0
 2135 0170 11       		.uleb128 0x11
 2136 0171 01       		.uleb128 0x1
 2137 0172 31       		.uleb128 0x31
 2138 0173 13       		.uleb128 0x13
 2139 0174 00       		.byte	0
 2140 0175 00       		.byte	0
 2141 0176 1B       		.uleb128 0x1b
 2142 0177 34       		.uleb128 0x34
 2143 0178 00       		.byte	0
 2144 0179 03       		.uleb128 0x3
 2145 017a 0E       		.uleb128 0xe
 2146 017b 3A       		.uleb128 0x3a
 2147 017c 0B       		.uleb128 0xb
 2148 017d 3B       		.uleb128 0x3b
 2149 017e 05       		.uleb128 0x5
 2150 017f 49       		.uleb128 0x49
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 57


 2151 0180 13       		.uleb128 0x13
 2152 0181 02       		.uleb128 0x2
 2153 0182 18       		.uleb128 0x18
 2154 0183 00       		.byte	0
 2155 0184 00       		.byte	0
 2156 0185 1C       		.uleb128 0x1c
 2157 0186 34       		.uleb128 0x34
 2158 0187 00       		.byte	0
 2159 0188 03       		.uleb128 0x3
 2160 0189 0E       		.uleb128 0xe
 2161 018a 3A       		.uleb128 0x3a
 2162 018b 0B       		.uleb128 0xb
 2163 018c 3B       		.uleb128 0x3b
 2164 018d 05       		.uleb128 0x5
 2165 018e 49       		.uleb128 0x49
 2166 018f 13       		.uleb128 0x13
 2167 0190 00       		.byte	0
 2168 0191 00       		.byte	0
 2169 0192 1D       		.uleb128 0x1d
 2170 0193 1D       		.uleb128 0x1d
 2171 0194 01       		.byte	0x1
 2172 0195 31       		.uleb128 0x31
 2173 0196 13       		.uleb128 0x13
 2174 0197 11       		.uleb128 0x11
 2175 0198 01       		.uleb128 0x1
 2176 0199 12       		.uleb128 0x12
 2177 019a 06       		.uleb128 0x6
 2178 019b 58       		.uleb128 0x58
 2179 019c 0B       		.uleb128 0xb
 2180 019d 59       		.uleb128 0x59
 2181 019e 05       		.uleb128 0x5
 2182 019f 01       		.uleb128 0x1
 2183 01a0 13       		.uleb128 0x13
 2184 01a1 00       		.byte	0
 2185 01a2 00       		.byte	0
 2186 01a3 1E       		.uleb128 0x1e
 2187 01a4 0B       		.uleb128 0xb
 2188 01a5 01       		.byte	0x1
 2189 01a6 11       		.uleb128 0x11
 2190 01a7 01       		.uleb128 0x1
 2191 01a8 12       		.uleb128 0x12
 2192 01a9 06       		.uleb128 0x6
 2193 01aa 00       		.byte	0
 2194 01ab 00       		.byte	0
 2195 01ac 1F       		.uleb128 0x1f
 2196 01ad 34       		.uleb128 0x34
 2197 01ae 00       		.byte	0
 2198 01af 31       		.uleb128 0x31
 2199 01b0 13       		.uleb128 0x13
 2200 01b1 00       		.byte	0
 2201 01b2 00       		.byte	0
 2202 01b3 20       		.uleb128 0x20
 2203 01b4 1D       		.uleb128 0x1d
 2204 01b5 01       		.byte	0x1
 2205 01b6 31       		.uleb128 0x31
 2206 01b7 13       		.uleb128 0x13
 2207 01b8 11       		.uleb128 0x11
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 58


 2208 01b9 01       		.uleb128 0x1
 2209 01ba 12       		.uleb128 0x12
 2210 01bb 06       		.uleb128 0x6
 2211 01bc 58       		.uleb128 0x58
 2212 01bd 0B       		.uleb128 0xb
 2213 01be 59       		.uleb128 0x59
 2214 01bf 05       		.uleb128 0x5
 2215 01c0 00       		.byte	0
 2216 01c1 00       		.byte	0
 2217 01c2 21       		.uleb128 0x21
 2218 01c3 05       		.uleb128 0x5
 2219 01c4 00       		.byte	0
 2220 01c5 31       		.uleb128 0x31
 2221 01c6 13       		.uleb128 0x13
 2222 01c7 00       		.byte	0
 2223 01c8 00       		.byte	0
 2224 01c9 22       		.uleb128 0x22
 2225 01ca 05       		.uleb128 0x5
 2226 01cb 00       		.byte	0
 2227 01cc 03       		.uleb128 0x3
 2228 01cd 0E       		.uleb128 0xe
 2229 01ce 3A       		.uleb128 0x3a
 2230 01cf 0B       		.uleb128 0xb
 2231 01d0 3B       		.uleb128 0x3b
 2232 01d1 0B       		.uleb128 0xb
 2233 01d2 49       		.uleb128 0x49
 2234 01d3 13       		.uleb128 0x13
 2235 01d4 02       		.uleb128 0x2
 2236 01d5 17       		.uleb128 0x17
 2237 01d6 00       		.byte	0
 2238 01d7 00       		.byte	0
 2239 01d8 23       		.uleb128 0x23
 2240 01d9 2E       		.uleb128 0x2e
 2241 01da 01       		.byte	0x1
 2242 01db 3F       		.uleb128 0x3f
 2243 01dc 19       		.uleb128 0x19
 2244 01dd 03       		.uleb128 0x3
 2245 01de 0E       		.uleb128 0xe
 2246 01df 3A       		.uleb128 0x3a
 2247 01e0 0B       		.uleb128 0xb
 2248 01e1 3B       		.uleb128 0x3b
 2249 01e2 05       		.uleb128 0x5
 2250 01e3 27       		.uleb128 0x27
 2251 01e4 19       		.uleb128 0x19
 2252 01e5 11       		.uleb128 0x11
 2253 01e6 01       		.uleb128 0x1
 2254 01e7 12       		.uleb128 0x12
 2255 01e8 06       		.uleb128 0x6
 2256 01e9 40       		.uleb128 0x40
 2257 01ea 18       		.uleb128 0x18
 2258 01eb 9742     		.uleb128 0x2117
 2259 01ed 19       		.uleb128 0x19
 2260 01ee 01       		.uleb128 0x1
 2261 01ef 13       		.uleb128 0x13
 2262 01f0 00       		.byte	0
 2263 01f1 00       		.byte	0
 2264 01f2 24       		.uleb128 0x24
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 59


 2265 01f3 34       		.uleb128 0x34
 2266 01f4 00       		.byte	0
 2267 01f5 03       		.uleb128 0x3
 2268 01f6 0E       		.uleb128 0xe
 2269 01f7 3A       		.uleb128 0x3a
 2270 01f8 0B       		.uleb128 0xb
 2271 01f9 3B       		.uleb128 0x3b
 2272 01fa 05       		.uleb128 0x5
 2273 01fb 49       		.uleb128 0x49
 2274 01fc 13       		.uleb128 0x13
 2275 01fd 3F       		.uleb128 0x3f
 2276 01fe 19       		.uleb128 0x19
 2277 01ff 3C       		.uleb128 0x3c
 2278 0200 19       		.uleb128 0x19
 2279 0201 00       		.byte	0
 2280 0202 00       		.byte	0
 2281 0203 25       		.uleb128 0x25
 2282 0204 2E       		.uleb128 0x2e
 2283 0205 00       		.byte	0
 2284 0206 3F       		.uleb128 0x3f
 2285 0207 19       		.uleb128 0x19
 2286 0208 3C       		.uleb128 0x3c
 2287 0209 19       		.uleb128 0x19
 2288 020a 6E       		.uleb128 0x6e
 2289 020b 0E       		.uleb128 0xe
 2290 020c 03       		.uleb128 0x3
 2291 020d 0E       		.uleb128 0xe
 2292 020e 3A       		.uleb128 0x3a
 2293 020f 0B       		.uleb128 0xb
 2294 0210 3B       		.uleb128 0x3b
 2295 0211 0B       		.uleb128 0xb
 2296 0212 00       		.byte	0
 2297 0213 00       		.byte	0
 2298 0214 26       		.uleb128 0x26
 2299 0215 2E       		.uleb128 0x2e
 2300 0216 00       		.byte	0
 2301 0217 3F       		.uleb128 0x3f
 2302 0218 19       		.uleb128 0x19
 2303 0219 3C       		.uleb128 0x3c
 2304 021a 19       		.uleb128 0x19
 2305 021b 6E       		.uleb128 0x6e
 2306 021c 0E       		.uleb128 0xe
 2307 021d 03       		.uleb128 0x3
 2308 021e 0E       		.uleb128 0xe
 2309 021f 3A       		.uleb128 0x3a
 2310 0220 0B       		.uleb128 0xb
 2311 0221 3B       		.uleb128 0x3b
 2312 0222 05       		.uleb128 0x5
 2313 0223 00       		.byte	0
 2314 0224 00       		.byte	0
 2315 0225 00       		.byte	0
 2316              		.section	.debug_loc,"",%progbits
 2317              	.Ldebug_loc0:
 2318              	.LLST0:
 2319 0000 00000000 		.4byte	.LVL0
 2320 0004 08000000 		.4byte	.LVL1
 2321 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 60


 2322 000a 50       		.byte	0x50
 2323 000b 08000000 		.4byte	.LVL1
 2324 000f 0A000000 		.4byte	.LVL2
 2325 0013 0400     		.2byte	0x4
 2326 0015 F3       		.byte	0xf3
 2327 0016 01       		.uleb128 0x1
 2328 0017 50       		.byte	0x50
 2329 0018 9F       		.byte	0x9f
 2330 0019 0A000000 		.4byte	.LVL2
 2331 001d 12000000 		.4byte	.LVL3
 2332 0021 0100     		.2byte	0x1
 2333 0023 50       		.byte	0x50
 2334 0024 12000000 		.4byte	.LVL3
 2335 0028 14000000 		.4byte	.LVL4
 2336 002c 0400     		.2byte	0x4
 2337 002e F3       		.byte	0xf3
 2338 002f 01       		.uleb128 0x1
 2339 0030 50       		.byte	0x50
 2340 0031 9F       		.byte	0x9f
 2341 0032 14000000 		.4byte	.LVL4
 2342 0036 16000000 		.4byte	.LVL5
 2343 003a 0100     		.2byte	0x1
 2344 003c 50       		.byte	0x50
 2345 003d 16000000 		.4byte	.LVL5
 2346 0041 18000000 		.4byte	.LVL6
 2347 0045 0400     		.2byte	0x4
 2348 0047 F3       		.byte	0xf3
 2349 0048 01       		.uleb128 0x1
 2350 0049 50       		.byte	0x50
 2351 004a 9F       		.byte	0x9f
 2352 004b 18000000 		.4byte	.LVL6
 2353 004f 1A000000 		.4byte	.LVL7
 2354 0053 0100     		.2byte	0x1
 2355 0055 50       		.byte	0x50
 2356 0056 1A000000 		.4byte	.LVL7
 2357 005a 1C000000 		.4byte	.LFE77
 2358 005e 0400     		.2byte	0x4
 2359 0060 F3       		.byte	0xf3
 2360 0061 01       		.uleb128 0x1
 2361 0062 50       		.byte	0x50
 2362 0063 9F       		.byte	0x9f
 2363 0064 00000000 		.4byte	0
 2364 0068 00000000 		.4byte	0
 2365              	.LLST1:
 2366 006c 00000000 		.4byte	.LVL0
 2367 0070 1A000000 		.4byte	.LVL7
 2368 0074 0200     		.2byte	0x2
 2369 0076 30       		.byte	0x30
 2370 0077 9F       		.byte	0x9f
 2371 0078 1A000000 		.4byte	.LVL7
 2372 007c 1C000000 		.4byte	.LFE77
 2373 0080 0100     		.2byte	0x1
 2374 0082 50       		.byte	0x50
 2375 0083 00000000 		.4byte	0
 2376 0087 00000000 		.4byte	0
 2377              	.LLST2:
 2378 008b 08000000 		.4byte	.LVL8
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 61


 2379 008f 12000000 		.4byte	.LVL9
 2380 0093 0100     		.2byte	0x1
 2381 0095 50       		.byte	0x50
 2382 0096 12000000 		.4byte	.LVL9
 2383 009a 1A000000 		.4byte	.LFE68
 2384 009e 0100     		.2byte	0x1
 2385 00a0 54       		.byte	0x54
 2386 00a1 00000000 		.4byte	0
 2387 00a5 00000000 		.4byte	0
 2388              	.LLST3:
 2389 00a9 00000000 		.4byte	.LVL11
 2390 00ad 11000000 		.4byte	.LVL13-1
 2391 00b1 0100     		.2byte	0x1
 2392 00b3 50       		.byte	0x50
 2393 00b4 11000000 		.4byte	.LVL13-1
 2394 00b8 AA000000 		.4byte	.LVL36
 2395 00bc 0100     		.2byte	0x1
 2396 00be 57       		.byte	0x57
 2397 00bf AA000000 		.4byte	.LVL36
 2398 00c3 B0000000 		.4byte	.LFE70
 2399 00c7 0400     		.2byte	0x4
 2400 00c9 F3       		.byte	0xf3
 2401 00ca 01       		.uleb128 0x1
 2402 00cb 50       		.byte	0x50
 2403 00cc 9F       		.byte	0x9f
 2404 00cd 00000000 		.4byte	0
 2405 00d1 00000000 		.4byte	0
 2406              	.LLST4:
 2407 00d5 00000000 		.4byte	.LVL11
 2408 00d9 11000000 		.4byte	.LVL13-1
 2409 00dd 0100     		.2byte	0x1
 2410 00df 51       		.byte	0x51
 2411 00e0 11000000 		.4byte	.LVL13-1
 2412 00e4 9A000000 		.4byte	.LVL32
 2413 00e8 0100     		.2byte	0x1
 2414 00ea 56       		.byte	0x56
 2415 00eb 9A000000 		.4byte	.LVL32
 2416 00ef B0000000 		.4byte	.LFE70
 2417 00f3 0400     		.2byte	0x4
 2418 00f5 F3       		.byte	0xf3
 2419 00f6 01       		.uleb128 0x1
 2420 00f7 51       		.byte	0x51
 2421 00f8 9F       		.byte	0x9f
 2422 00f9 00000000 		.4byte	0
 2423 00fd 00000000 		.4byte	0
 2424              	.LLST5:
 2425 0101 00000000 		.4byte	.LVL11
 2426 0105 11000000 		.4byte	.LVL13-1
 2427 0109 0100     		.2byte	0x1
 2428 010b 52       		.byte	0x52
 2429 010c 11000000 		.4byte	.LVL13-1
 2430 0110 AA000000 		.4byte	.LVL36
 2431 0114 0100     		.2byte	0x1
 2432 0116 59       		.byte	0x59
 2433 0117 AA000000 		.4byte	.LVL36
 2434 011b B0000000 		.4byte	.LFE70
 2435 011f 0400     		.2byte	0x4
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 62


 2436 0121 F3       		.byte	0xf3
 2437 0122 01       		.uleb128 0x1
 2438 0123 52       		.byte	0x52
 2439 0124 9F       		.byte	0x9f
 2440 0125 00000000 		.4byte	0
 2441 0129 00000000 		.4byte	0
 2442              	.LLST6:
 2443 012d 00000000 		.4byte	.LVL11
 2444 0131 11000000 		.4byte	.LVL13-1
 2445 0135 0100     		.2byte	0x1
 2446 0137 53       		.byte	0x53
 2447 0138 11000000 		.4byte	.LVL13-1
 2448 013c AA000000 		.4byte	.LVL36
 2449 0140 0100     		.2byte	0x1
 2450 0142 58       		.byte	0x58
 2451 0143 AA000000 		.4byte	.LVL36
 2452 0147 B0000000 		.4byte	.LFE70
 2453 014b 0400     		.2byte	0x4
 2454 014d F3       		.byte	0xf3
 2455 014e 01       		.uleb128 0x1
 2456 014f 53       		.byte	0x53
 2457 0150 9F       		.byte	0x9f
 2458 0151 00000000 		.4byte	0
 2459 0155 00000000 		.4byte	0
 2460              	.LLST7:
 2461 0159 00000000 		.4byte	.LVL11
 2462 015d 20000000 		.4byte	.LVL16
 2463 0161 0200     		.2byte	0x2
 2464 0163 91       		.byte	0x91
 2465 0164 00       		.sleb128 0
 2466 0165 20000000 		.4byte	.LVL16
 2467 0169 30000000 		.4byte	.LVL17
 2468 016d 0200     		.2byte	0x2
 2469 016f 30       		.byte	0x30
 2470 0170 9F       		.byte	0x9f
 2471 0171 30000000 		.4byte	.LVL17
 2472 0175 58000000 		.4byte	.LVL24
 2473 0179 0200     		.2byte	0x2
 2474 017b 91       		.byte	0x91
 2475 017c 00       		.sleb128 0
 2476 017d 58000000 		.4byte	.LVL24
 2477 0181 5A000000 		.4byte	.LVL25
 2478 0185 0200     		.2byte	0x2
 2479 0187 30       		.byte	0x30
 2480 0188 9F       		.byte	0x9f
 2481 0189 5A000000 		.4byte	.LVL25
 2482 018d AA000000 		.4byte	.LVL36
 2483 0191 0100     		.2byte	0x1
 2484 0193 55       		.byte	0x55
 2485 0194 00000000 		.4byte	0
 2486 0198 00000000 		.4byte	0
 2487              	.LLST8:
 2488 019c 0E000000 		.4byte	.LVL12
 2489 01a0 11000000 		.4byte	.LVL13-1
 2490 01a4 0100     		.2byte	0x1
 2491 01a6 50       		.byte	0x50
 2492 01a7 11000000 		.4byte	.LVL13-1
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 63


 2493 01ab AA000000 		.4byte	.LVL36
 2494 01af 0100     		.2byte	0x1
 2495 01b1 57       		.byte	0x57
 2496 01b2 AA000000 		.4byte	.LVL36
 2497 01b6 B0000000 		.4byte	.LFE70
 2498 01ba 0400     		.2byte	0x4
 2499 01bc F3       		.byte	0xf3
 2500 01bd 01       		.uleb128 0x1
 2501 01be 50       		.byte	0x50
 2502 01bf 9F       		.byte	0x9f
 2503 01c0 00000000 		.4byte	0
 2504 01c4 00000000 		.4byte	0
 2505              	.LLST9:
 2506 01c8 20000000 		.4byte	.LVL16
 2507 01cc 30000000 		.4byte	.LVL17
 2508 01d0 0100     		.2byte	0x1
 2509 01d2 54       		.byte	0x54
 2510 01d3 54000000 		.4byte	.LVL22
 2511 01d7 58000000 		.4byte	.LVL24
 2512 01db 0200     		.2byte	0x2
 2513 01dd 30       		.byte	0x30
 2514 01de 9F       		.byte	0x9f
 2515 01df 58000000 		.4byte	.LVL24
 2516 01e3 78000000 		.4byte	.LVL28
 2517 01e7 0100     		.2byte	0x1
 2518 01e9 54       		.byte	0x54
 2519 01ea 78000000 		.4byte	.LVL28
 2520 01ee 81000000 		.4byte	.LVL29-1
 2521 01f2 0100     		.2byte	0x1
 2522 01f4 50       		.byte	0x50
 2523 01f5 81000000 		.4byte	.LVL29-1
 2524 01f9 AA000000 		.4byte	.LVL36
 2525 01fd 0100     		.2byte	0x1
 2526 01ff 54       		.byte	0x54
 2527 0200 AA000000 		.4byte	.LVL36
 2528 0204 B0000000 		.4byte	.LFE70
 2529 0208 0100     		.2byte	0x1
 2530 020a 50       		.byte	0x50
 2531 020b 00000000 		.4byte	0
 2532 020f 00000000 		.4byte	0
 2533              	.LLST10:
 2534 0213 0E000000 		.4byte	.LVL12
 2535 0217 40000000 		.4byte	.LVL18
 2536 021b 0200     		.2byte	0x2
 2537 021d 30       		.byte	0x30
 2538 021e 9F       		.byte	0x9f
 2539 021f 40000000 		.4byte	.LVL18
 2540 0223 4E000000 		.4byte	.LVL20
 2541 0227 0100     		.2byte	0x1
 2542 0229 51       		.byte	0x51
 2543 022a 58000000 		.4byte	.LVL24
 2544 022e 5A000000 		.4byte	.LVL25
 2545 0232 0200     		.2byte	0x2
 2546 0234 30       		.byte	0x30
 2547 0235 9F       		.byte	0x9f
 2548 0236 00000000 		.4byte	0
 2549 023a 00000000 		.4byte	0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 64


 2550              	.LLST11:
 2551 023e 1E000000 		.4byte	.LVL15
 2552 0242 50000000 		.4byte	.LVL21
 2553 0246 0100     		.2byte	0x1
 2554 0248 50       		.byte	0x50
 2555 0249 58000000 		.4byte	.LVL24
 2556 024d 5A000000 		.4byte	.LVL25
 2557 0251 0100     		.2byte	0x1
 2558 0253 50       		.byte	0x50
 2559 0254 00000000 		.4byte	0
 2560 0258 00000000 		.4byte	0
 2561              	.LLST12:
 2562 025c 5E000000 		.4byte	.LVL26
 2563 0260 75000000 		.4byte	.LVL27-1
 2564 0264 0100     		.2byte	0x1
 2565 0266 50       		.byte	0x50
 2566 0267 00000000 		.4byte	0
 2567 026b 00000000 		.4byte	0
 2568              	.LLST13:
 2569 026f 0E000000 		.4byte	.LVL12
 2570 0273 9C000000 		.4byte	.LVL33
 2571 0277 0200     		.2byte	0x2
 2572 0279 30       		.byte	0x30
 2573 027a 9F       		.byte	0x9f
 2574 027b 9C000000 		.4byte	.LVL33
 2575 027f A0000000 		.4byte	.LVL34
 2576 0283 0200     		.2byte	0x2
 2577 0285 31       		.byte	0x31
 2578 0286 9F       		.byte	0x9f
 2579 0287 00000000 		.4byte	0
 2580 028b 00000000 		.4byte	0
 2581              	.LLST14:
 2582 028f 14000000 		.4byte	.LVL14
 2583 0293 56000000 		.4byte	.LVL23
 2584 0297 0100     		.2byte	0x1
 2585 0299 54       		.byte	0x54
 2586 029a 58000000 		.4byte	.LVL24
 2587 029e 5A000000 		.4byte	.LVL25
 2588 02a2 0100     		.2byte	0x1
 2589 02a4 54       		.byte	0x54
 2590 02a5 00000000 		.4byte	0
 2591 02a9 00000000 		.4byte	0
 2592              	.LLST15:
 2593 02ad 00000000 		.4byte	.LVL37
 2594 02b1 09000000 		.4byte	.LVL39-1
 2595 02b5 0100     		.2byte	0x1
 2596 02b7 50       		.byte	0x50
 2597 02b8 09000000 		.4byte	.LVL39-1
 2598 02bc 1A000000 		.4byte	.LFE71
 2599 02c0 0100     		.2byte	0x1
 2600 02c2 56       		.byte	0x56
 2601 02c3 00000000 		.4byte	0
 2602 02c7 00000000 		.4byte	0
 2603              	.LLST16:
 2604 02cb 00000000 		.4byte	.LVL37
 2605 02cf 09000000 		.4byte	.LVL39-1
 2606 02d3 0100     		.2byte	0x1
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 65


 2607 02d5 51       		.byte	0x51
 2608 02d6 09000000 		.4byte	.LVL39-1
 2609 02da 10000000 		.4byte	.LVL41
 2610 02de 0100     		.2byte	0x1
 2611 02e0 54       		.byte	0x54
 2612 02e1 10000000 		.4byte	.LVL41
 2613 02e5 1A000000 		.4byte	.LFE71
 2614 02e9 0400     		.2byte	0x4
 2615 02eb F3       		.byte	0xf3
 2616 02ec 01       		.uleb128 0x1
 2617 02ed 51       		.byte	0x51
 2618 02ee 9F       		.byte	0x9f
 2619 02ef 00000000 		.4byte	0
 2620 02f3 00000000 		.4byte	0
 2621              	.LLST17:
 2622 02f7 06000000 		.4byte	.LVL38
 2623 02fb 09000000 		.4byte	.LVL39-1
 2624 02ff 0100     		.2byte	0x1
 2625 0301 50       		.byte	0x50
 2626 0302 09000000 		.4byte	.LVL39-1
 2627 0306 1A000000 		.4byte	.LFE71
 2628 030a 0100     		.2byte	0x1
 2629 030c 56       		.byte	0x56
 2630 030d 00000000 		.4byte	0
 2631 0311 00000000 		.4byte	0
 2632              	.LLST18:
 2633 0315 00000000 		.4byte	.LVL43
 2634 0319 16000000 		.4byte	.LVL44
 2635 031d 0100     		.2byte	0x1
 2636 031f 50       		.byte	0x50
 2637 0320 16000000 		.4byte	.LVL44
 2638 0324 1C000000 		.4byte	.LFE72
 2639 0328 0400     		.2byte	0x4
 2640 032a F3       		.byte	0xf3
 2641 032b 01       		.uleb128 0x1
 2642 032c 50       		.byte	0x50
 2643 032d 9F       		.byte	0x9f
 2644 032e 00000000 		.4byte	0
 2645 0332 00000000 		.4byte	0
 2646              	.LLST19:
 2647 0336 00000000 		.4byte	.LVL43
 2648 033a 16000000 		.4byte	.LVL44
 2649 033e 0100     		.2byte	0x1
 2650 0340 50       		.byte	0x50
 2651 0341 16000000 		.4byte	.LVL44
 2652 0345 1C000000 		.4byte	.LFE72
 2653 0349 0400     		.2byte	0x4
 2654 034b F3       		.byte	0xf3
 2655 034c 01       		.uleb128 0x1
 2656 034d 50       		.byte	0x50
 2657 034e 9F       		.byte	0x9f
 2658 034f 00000000 		.4byte	0
 2659 0353 00000000 		.4byte	0
 2660              	.LLST20:
 2661 0357 00000000 		.4byte	.LVL45
 2662 035b 0D000000 		.4byte	.LVL48-1
 2663 035f 0100     		.2byte	0x1
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 66


 2664 0361 50       		.byte	0x50
 2665 0362 0D000000 		.4byte	.LVL48-1
 2666 0366 6E000000 		.4byte	.LFE73
 2667 036a 0100     		.2byte	0x1
 2668 036c 54       		.byte	0x54
 2669 036d 00000000 		.4byte	0
 2670 0371 00000000 		.4byte	0
 2671              	.LLST21:
 2672 0375 00000000 		.4byte	.LVL45
 2673 0379 0D000000 		.4byte	.LVL48-1
 2674 037d 0100     		.2byte	0x1
 2675 037f 51       		.byte	0x51
 2676 0380 0D000000 		.4byte	.LVL48-1
 2677 0384 14000000 		.4byte	.LVL50
 2678 0388 0100     		.2byte	0x1
 2679 038a 55       		.byte	0x55
 2680 038b 14000000 		.4byte	.LVL50
 2681 038f 6E000000 		.4byte	.LFE73
 2682 0393 0400     		.2byte	0x4
 2683 0395 F3       		.byte	0xf3
 2684 0396 01       		.uleb128 0x1
 2685 0397 51       		.byte	0x51
 2686 0398 9F       		.byte	0x9f
 2687 0399 00000000 		.4byte	0
 2688 039d 00000000 		.4byte	0
 2689              	.LLST22:
 2690 03a1 10000000 		.4byte	.LVL49
 2691 03a5 57000000 		.4byte	.LVL58-1
 2692 03a9 0100     		.2byte	0x1
 2693 03ab 50       		.byte	0x50
 2694 03ac 5A000000 		.4byte	.LVL59
 2695 03b0 69000000 		.4byte	.LVL61-1
 2696 03b4 0100     		.2byte	0x1
 2697 03b6 50       		.byte	0x50
 2698 03b7 00000000 		.4byte	0
 2699 03bb 00000000 		.4byte	0
 2700              	.LLST23:
 2701 03bf 1C000000 		.4byte	.LVL52
 2702 03c3 5A000000 		.4byte	.LVL59
 2703 03c7 0100     		.2byte	0x1
 2704 03c9 55       		.byte	0x55
 2705 03ca 00000000 		.4byte	0
 2706 03ce 00000000 		.4byte	0
 2707              	.LLST24:
 2708 03d2 06000000 		.4byte	.LVL46
 2709 03d6 0D000000 		.4byte	.LVL48-1
 2710 03da 0300     		.2byte	0x3
 2711 03dc 70       		.byte	0x70
 2712 03dd 04       		.sleb128 4
 2713 03de 9F       		.byte	0x9f
 2714 03df 0D000000 		.4byte	.LVL48-1
 2715 03e3 6E000000 		.4byte	.LFE73
 2716 03e7 0300     		.2byte	0x3
 2717 03e9 74       		.byte	0x74
 2718 03ea 04       		.sleb128 4
 2719 03eb 9F       		.byte	0x9f
 2720 03ec 00000000 		.4byte	0
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 67


 2721 03f0 00000000 		.4byte	0
 2722              	.LLST25:
 2723 03f4 06000000 		.4byte	.LVL46
 2724 03f8 1A000000 		.4byte	.LVL51
 2725 03fc 0200     		.2byte	0x2
 2726 03fe 30       		.byte	0x30
 2727 03ff 9F       		.byte	0x9f
 2728 0400 1A000000 		.4byte	.LVL51
 2729 0404 64000000 		.4byte	.LVL60
 2730 0408 0100     		.2byte	0x1
 2731 040a 57       		.byte	0x57
 2732 040b 00000000 		.4byte	0
 2733 040f 00000000 		.4byte	0
 2734              	.LLST26:
 2735 0413 1E000000 		.4byte	.LVL53
 2736 0417 22000000 		.4byte	.LVL54
 2737 041b 0100     		.2byte	0x1
 2738 041d 53       		.byte	0x53
 2739 041e 22000000 		.4byte	.LVL54
 2740 0422 57000000 		.4byte	.LVL58-1
 2741 0426 0100     		.2byte	0x1
 2742 0428 52       		.byte	0x52
 2743 0429 00000000 		.4byte	0
 2744 042d 00000000 		.4byte	0
 2745              	.LLST27:
 2746 0431 1E000000 		.4byte	.LVL53
 2747 0435 57000000 		.4byte	.LVL58-1
 2748 0439 0800     		.2byte	0x8
 2749 043b 73       		.byte	0x73
 2750 043c 00       		.sleb128 0
 2751 043d 40       		.byte	0x40
 2752 043e 44       		.byte	0x44
 2753 043f 24       		.byte	0x24
 2754 0440 1F       		.byte	0x1f
 2755 0441 1A       		.byte	0x1a
 2756 0442 9F       		.byte	0x9f
 2757 0443 00000000 		.4byte	0
 2758 0447 00000000 		.4byte	0
 2759              	.LLST28:
 2760 044b 06000000 		.4byte	.LVL46
 2761 044f 0D000000 		.4byte	.LVL48-1
 2762 0453 0100     		.2byte	0x1
 2763 0455 50       		.byte	0x50
 2764 0456 0D000000 		.4byte	.LVL48-1
 2765 045a 6E000000 		.4byte	.LFE73
 2766 045e 0100     		.2byte	0x1
 2767 0460 54       		.byte	0x54
 2768 0461 00000000 		.4byte	0
 2769 0465 00000000 		.4byte	0
 2770              	.LLST29:
 2771 0469 06000000 		.4byte	.LVL46
 2772 046d 1A000000 		.4byte	.LVL51
 2773 0471 0200     		.2byte	0x2
 2774 0473 30       		.byte	0x30
 2775 0474 9F       		.byte	0x9f
 2776 0475 1E000000 		.4byte	.LVL53
 2777 0479 44000000 		.4byte	.LVL55
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 68


 2778 047d 0200     		.2byte	0x2
 2779 047f 30       		.byte	0x30
 2780 0480 9F       		.byte	0x9f
 2781 0481 44000000 		.4byte	.LVL55
 2782 0485 50000000 		.4byte	.LVL57
 2783 0489 0100     		.2byte	0x1
 2784 048b 51       		.byte	0x51
 2785 048c 00000000 		.4byte	0
 2786 0490 00000000 		.4byte	0
 2787              	.LLST30:
 2788 0494 00000000 		.4byte	.LVL62
 2789 0498 0F000000 		.4byte	.LVL64-1
 2790 049c 0100     		.2byte	0x1
 2791 049e 50       		.byte	0x50
 2792 049f 0F000000 		.4byte	.LVL64-1
 2793 04a3 8A000000 		.4byte	.LVL82
 2794 04a7 0100     		.2byte	0x1
 2795 04a9 55       		.byte	0x55
 2796 04aa 8A000000 		.4byte	.LVL82
 2797 04ae 90000000 		.4byte	.LFE69
 2798 04b2 0400     		.2byte	0x4
 2799 04b4 F3       		.byte	0xf3
 2800 04b5 01       		.uleb128 0x1
 2801 04b6 50       		.byte	0x50
 2802 04b7 9F       		.byte	0x9f
 2803 04b8 00000000 		.4byte	0
 2804 04bc 00000000 		.4byte	0
 2805              	.LLST31:
 2806 04c0 00000000 		.4byte	.LVL62
 2807 04c4 0F000000 		.4byte	.LVL64-1
 2808 04c8 0100     		.2byte	0x1
 2809 04ca 51       		.byte	0x51
 2810 04cb 0F000000 		.4byte	.LVL64-1
 2811 04cf 20000000 		.4byte	.LVL67
 2812 04d3 0100     		.2byte	0x1
 2813 04d5 54       		.byte	0x54
 2814 04d6 20000000 		.4byte	.LVL67
 2815 04da 90000000 		.4byte	.LFE69
 2816 04de 0400     		.2byte	0x4
 2817 04e0 F3       		.byte	0xf3
 2818 04e1 01       		.uleb128 0x1
 2819 04e2 51       		.byte	0x51
 2820 04e3 9F       		.byte	0x9f
 2821 04e4 00000000 		.4byte	0
 2822 04e8 00000000 		.4byte	0
 2823              	.LLST32:
 2824 04ec 00000000 		.4byte	.LVL62
 2825 04f0 0F000000 		.4byte	.LVL64-1
 2826 04f4 0100     		.2byte	0x1
 2827 04f6 52       		.byte	0x52
 2828 04f7 0F000000 		.4byte	.LVL64-1
 2829 04fb 7A000000 		.4byte	.LVL79
 2830 04ff 0100     		.2byte	0x1
 2831 0501 57       		.byte	0x57
 2832 0502 7A000000 		.4byte	.LVL79
 2833 0506 90000000 		.4byte	.LFE69
 2834 050a 0400     		.2byte	0x4
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 69


 2835 050c F3       		.byte	0xf3
 2836 050d 01       		.uleb128 0x1
 2837 050e 52       		.byte	0x52
 2838 050f 9F       		.byte	0x9f
 2839 0510 00000000 		.4byte	0
 2840 0514 00000000 		.4byte	0
 2841              	.LLST33:
 2842 0518 00000000 		.4byte	.LVL62
 2843 051c 0F000000 		.4byte	.LVL64-1
 2844 0520 0100     		.2byte	0x1
 2845 0522 53       		.byte	0x53
 2846 0523 0F000000 		.4byte	.LVL64-1
 2847 0527 2E000000 		.4byte	.LVL69
 2848 052b 0100     		.2byte	0x1
 2849 052d 56       		.byte	0x56
 2850 052e 2E000000 		.4byte	.LVL69
 2851 0532 32000000 		.4byte	.LVL70
 2852 0536 0200     		.2byte	0x2
 2853 0538 30       		.byte	0x30
 2854 0539 9F       		.byte	0x9f
 2855 053a 32000000 		.4byte	.LVL70
 2856 053e 8A000000 		.4byte	.LVL82
 2857 0542 0100     		.2byte	0x1
 2858 0544 56       		.byte	0x56
 2859 0545 00000000 		.4byte	0
 2860 0549 00000000 		.4byte	0
 2861              	.LLST34:
 2862 054d 14000000 		.4byte	.LVL65
 2863 0551 8A000000 		.4byte	.LVL82
 2864 0555 0100     		.2byte	0x1
 2865 0557 58       		.byte	0x58
 2866 0558 00000000 		.4byte	0
 2867 055c 00000000 		.4byte	0
 2868              	.LLST35:
 2869 0560 26000000 		.4byte	.LVL68
 2870 0564 32000000 		.4byte	.LVL70
 2871 0568 0100     		.2byte	0x1
 2872 056a 54       		.byte	0x54
 2873 056b 40000000 		.4byte	.LVL71
 2874 056f 44000000 		.4byte	.LVL72
 2875 0573 0200     		.2byte	0x2
 2876 0575 30       		.byte	0x30
 2877 0576 9F       		.byte	0x9f
 2878 0577 46000000 		.4byte	.LVL73
 2879 057b 64000000 		.4byte	.LVL76
 2880 057f 0100     		.2byte	0x1
 2881 0581 54       		.byte	0x54
 2882 0582 64000000 		.4byte	.LVL76
 2883 0586 6D000000 		.4byte	.LVL77-1
 2884 058a 0100     		.2byte	0x1
 2885 058c 50       		.byte	0x50
 2886 058d 6D000000 		.4byte	.LVL77-1
 2887 0591 8A000000 		.4byte	.LVL82
 2888 0595 0100     		.2byte	0x1
 2889 0597 54       		.byte	0x54
 2890 0598 8A000000 		.4byte	.LVL82
 2891 059c 90000000 		.4byte	.LFE69
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 70


 2892 05a0 0100     		.2byte	0x1
 2893 05a2 50       		.byte	0x50
 2894 05a3 00000000 		.4byte	0
 2895 05a7 00000000 		.4byte	0
 2896              	.LLST36:
 2897 05ab 0C000000 		.4byte	.LVL63
 2898 05af 0F000000 		.4byte	.LVL64-1
 2899 05b3 0100     		.2byte	0x1
 2900 05b5 50       		.byte	0x50
 2901 05b6 0F000000 		.4byte	.LVL64-1
 2902 05ba 8A000000 		.4byte	.LVL82
 2903 05be 0100     		.2byte	0x1
 2904 05c0 55       		.byte	0x55
 2905 05c1 8A000000 		.4byte	.LVL82
 2906 05c5 90000000 		.4byte	.LFE69
 2907 05c9 0400     		.2byte	0x4
 2908 05cb F3       		.byte	0xf3
 2909 05cc 01       		.uleb128 0x1
 2910 05cd 50       		.byte	0x50
 2911 05ce 9F       		.byte	0x9f
 2912 05cf 00000000 		.4byte	0
 2913 05d3 00000000 		.4byte	0
 2914              	.LLST37:
 2915 05d7 4A000000 		.4byte	.LVL74
 2916 05db 61000000 		.4byte	.LVL75-1
 2917 05df 0100     		.2byte	0x1
 2918 05e1 50       		.byte	0x50
 2919 05e2 00000000 		.4byte	0
 2920 05e6 00000000 		.4byte	0
 2921              	.LLST38:
 2922 05ea 0C000000 		.4byte	.LVL63
 2923 05ee 46000000 		.4byte	.LVL73
 2924 05f2 0200     		.2byte	0x2
 2925 05f4 30       		.byte	0x30
 2926 05f5 9F       		.byte	0x9f
 2927 05f6 00000000 		.4byte	0
 2928 05fa 00000000 		.4byte	0
 2929              	.LLST39:
 2930 05fe 00000000 		.4byte	.LVL83
 2931 0602 07000000 		.4byte	.LVL85-1
 2932 0606 0100     		.2byte	0x1
 2933 0608 50       		.byte	0x50
 2934 0609 07000000 		.4byte	.LVL85-1
 2935 060d 26000000 		.4byte	.LFE74
 2936 0611 0100     		.2byte	0x1
 2937 0613 54       		.byte	0x54
 2938 0614 00000000 		.4byte	0
 2939 0618 00000000 		.4byte	0
 2940              	.LLST40:
 2941 061c 04000000 		.4byte	.LVL84
 2942 0620 07000000 		.4byte	.LVL85-1
 2943 0624 0100     		.2byte	0x1
 2944 0626 50       		.byte	0x50
 2945 0627 07000000 		.4byte	.LVL85-1
 2946 062b 26000000 		.4byte	.LFE74
 2947 062f 0100     		.2byte	0x1
 2948 0631 54       		.byte	0x54
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 71


 2949 0632 00000000 		.4byte	0
 2950 0636 00000000 		.4byte	0
 2951              	.LLST41:
 2952 063a 04000000 		.4byte	.LVL84
 2953 063e 07000000 		.4byte	.LVL85-1
 2954 0642 0300     		.2byte	0x3
 2955 0644 70       		.byte	0x70
 2956 0645 04       		.sleb128 4
 2957 0646 9F       		.byte	0x9f
 2958 0647 07000000 		.4byte	.LVL85-1
 2959 064b 26000000 		.4byte	.LFE74
 2960 064f 0300     		.2byte	0x3
 2961 0651 74       		.byte	0x74
 2962 0652 04       		.sleb128 4
 2963 0653 9F       		.byte	0x9f
 2964 0654 00000000 		.4byte	0
 2965 0658 00000000 		.4byte	0
 2966              	.LLST42:
 2967 065c 00000000 		.4byte	.LVL89
 2968 0660 05000000 		.4byte	.LVL90-1
 2969 0664 0100     		.2byte	0x1
 2970 0666 50       		.byte	0x50
 2971 0667 05000000 		.4byte	.LVL90-1
 2972 066b 08000000 		.4byte	.LFE75
 2973 066f 0400     		.2byte	0x4
 2974 0671 F3       		.byte	0xf3
 2975 0672 01       		.uleb128 0x1
 2976 0673 50       		.byte	0x50
 2977 0674 9F       		.byte	0x9f
 2978 0675 00000000 		.4byte	0
 2979 0679 00000000 		.4byte	0
 2980              	.LLST43:
 2981 067d 00000000 		.4byte	.LVL89
 2982 0681 05000000 		.4byte	.LVL90-1
 2983 0685 0100     		.2byte	0x1
 2984 0687 51       		.byte	0x51
 2985 0688 05000000 		.4byte	.LVL90-1
 2986 068c 08000000 		.4byte	.LFE75
 2987 0690 0400     		.2byte	0x4
 2988 0692 F3       		.byte	0xf3
 2989 0693 01       		.uleb128 0x1
 2990 0694 51       		.byte	0x51
 2991 0695 9F       		.byte	0x9f
 2992 0696 00000000 		.4byte	0
 2993 069a 00000000 		.4byte	0
 2994              	.LLST44:
 2995 069e 00000000 		.4byte	.LVL91
 2996 06a2 05000000 		.4byte	.LVL92-1
 2997 06a6 0100     		.2byte	0x1
 2998 06a8 50       		.byte	0x50
 2999 06a9 05000000 		.4byte	.LVL92-1
 3000 06ad 08000000 		.4byte	.LFE76
 3001 06b1 0400     		.2byte	0x4
 3002 06b3 F3       		.byte	0xf3
 3003 06b4 01       		.uleb128 0x1
 3004 06b5 50       		.byte	0x50
 3005 06b6 9F       		.byte	0x9f
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 72


 3006 06b7 00000000 		.4byte	0
 3007 06bb 00000000 		.4byte	0
 3008              	.LLST45:
 3009 06bf 00000000 		.4byte	.LVL91
 3010 06c3 05000000 		.4byte	.LVL92-1
 3011 06c7 0100     		.2byte	0x1
 3012 06c9 51       		.byte	0x51
 3013 06ca 05000000 		.4byte	.LVL92-1
 3014 06ce 08000000 		.4byte	.LFE76
 3015 06d2 0400     		.2byte	0x4
 3016 06d4 F3       		.byte	0xf3
 3017 06d5 01       		.uleb128 0x1
 3018 06d6 51       		.byte	0x51
 3019 06d7 9F       		.byte	0x9f
 3020 06d8 00000000 		.4byte	0
 3021 06dc 00000000 		.4byte	0
 3022              		.section	.debug_aranges,"",%progbits
 3023 0000 64000000 		.4byte	0x64
 3024 0004 0200     		.2byte	0x2
 3025 0006 00000000 		.4byte	.Ldebug_info0
 3026 000a 04       		.byte	0x4
 3027 000b 00       		.byte	0
 3028 000c 0000     		.2byte	0
 3029 000e 0000     		.2byte	0
 3030 0010 00000000 		.4byte	.LFB77
 3031 0014 1C000000 		.4byte	.LFE77-.LFB77
 3032 0018 00000000 		.4byte	.LFB68
 3033 001c 1A000000 		.4byte	.LFE68-.LFB68
 3034 0020 00000000 		.4byte	.LFB70
 3035 0024 B0000000 		.4byte	.LFE70-.LFB70
 3036 0028 00000000 		.4byte	.LFB71
 3037 002c 1A000000 		.4byte	.LFE71-.LFB71
 3038 0030 00000000 		.4byte	.LFB72
 3039 0034 1C000000 		.4byte	.LFE72-.LFB72
 3040 0038 00000000 		.4byte	.LFB73
 3041 003c 6E000000 		.4byte	.LFE73-.LFB73
 3042 0040 00000000 		.4byte	.LFB69
 3043 0044 90000000 		.4byte	.LFE69-.LFB69
 3044 0048 00000000 		.4byte	.LFB74
 3045 004c 26000000 		.4byte	.LFE74-.LFB74
 3046 0050 00000000 		.4byte	.LFB75
 3047 0054 08000000 		.4byte	.LFE75-.LFB75
 3048 0058 00000000 		.4byte	.LFB76
 3049 005c 08000000 		.4byte	.LFE76-.LFB76
 3050 0060 00000000 		.4byte	0
 3051 0064 00000000 		.4byte	0
 3052              		.section	.debug_ranges,"",%progbits
 3053              	.Ldebug_ranges0:
 3054 0000 12000000 		.4byte	.LBB6
 3055 0004 38000000 		.4byte	.LBE6
 3056 0008 3C000000 		.4byte	.LBB7
 3057 000c 5A000000 		.4byte	.LBE7
 3058 0010 00000000 		.4byte	0
 3059 0014 00000000 		.4byte	0
 3060 0018 00000000 		.4byte	.LFB77
 3061 001c 1C000000 		.4byte	.LFE77
 3062 0020 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 73


 3063 0024 1A000000 		.4byte	.LFE68
 3064 0028 00000000 		.4byte	.LFB70
 3065 002c B0000000 		.4byte	.LFE70
 3066 0030 00000000 		.4byte	.LFB71
 3067 0034 1A000000 		.4byte	.LFE71
 3068 0038 00000000 		.4byte	.LFB72
 3069 003c 1C000000 		.4byte	.LFE72
 3070 0040 00000000 		.4byte	.LFB73
 3071 0044 6E000000 		.4byte	.LFE73
 3072 0048 00000000 		.4byte	.LFB69
 3073 004c 90000000 		.4byte	.LFE69
 3074 0050 00000000 		.4byte	.LFB74
 3075 0054 26000000 		.4byte	.LFE74
 3076 0058 00000000 		.4byte	.LFB75
 3077 005c 08000000 		.4byte	.LFE75
 3078 0060 00000000 		.4byte	.LFB76
 3079 0064 08000000 		.4byte	.LFE76
 3080 0068 00000000 		.4byte	0
 3081 006c 00000000 		.4byte	0
 3082              		.section	.debug_line,"",%progbits
 3083              	.Ldebug_line0:
 3084 0000 4C030000 		.section	.debug_str,"MS",%progbits,1
 3084      0200E001 
 3084      00000201 
 3084      FB0E0D00 
 3084      01010101 
 3085              	.LASF85:
 3086 0000 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 3086      6B52656D 
 3086      6F766546 
 3086      726F6D55 
 3086      6E6F7264 
 3087              	.LASF48:
 3088 0022 78457665 		.ascii	"xEventGroupCreate\000"
 3088      6E744772 
 3088      6F757043 
 3088      72656174 
 3088      6500
 3089              	.LASF42:
 3090 0034 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3090      77424153 
 3090      45505249 
 3090      00
 3091              	.LASF79:
 3092 0041 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 3092      6B506C61 
 3092      63654F6E 
 3092      556E6F72 
 3092      64657265 
 3093              	.LASF45:
 3094 0060 78576169 		.ascii	"xWaitForAllBits\000"
 3094      74466F72 
 3094      416C6C42 
 3094      69747300 
 3095              	.LASF64:
 3096 0070 70784C69 		.ascii	"pxListEnd\000"
 3096      7374456E 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 74


 3096      6400
 3097              	.LASF78:
 3098 007a 764C6973 		.ascii	"vListInitialise\000"
 3098      74496E69 
 3098      7469616C 
 3098      69736500 
 3099              	.LASF5:
 3100 008a 73686F72 		.ascii	"short int\000"
 3100      7420696E 
 3100      7400
 3101              	.LASF30:
 3102 0094 784C6973 		.ascii	"xListEnd\000"
 3102      74456E64 
 3102      00
 3103              	.LASF23:
 3104 009d 70785072 		.ascii	"pxPrevious\000"
 3104      6576696F 
 3104      757300
 3105              	.LASF89:
 3106 00a8 443A5C6D 		.ascii	"D:\\myFolder\\projects\\Embedded-C-Lab-Book\\FreeRT"
 3106      79466F6C 
 3106      6465725C 
 3106      70726F6A 
 3106      65637473 
 3107 00d7 4F535C66 		.ascii	"OS\\freertos_mutex.cydsn\000"
 3107      72656572 
 3107      746F735F 
 3107      6D757465 
 3107      782E6379 
 3108              	.LASF51:
 3109 00ef 78436C65 		.ascii	"xClearOnExit\000"
 3109      61724F6E 
 3109      45786974 
 3109      00
 3110              	.LASF9:
 3111 00fc 5F5F7569 		.ascii	"__uint32_t\000"
 3111      6E743332 
 3111      5F7400
 3112              	.LASF39:
 3113 0107 4576656E 		.ascii	"EventBits_t\000"
 3113      74426974 
 3113      735F7400 
 3114              	.LASF46:
 3115 0113 78576169 		.ascii	"xWaitConditionMet\000"
 3115      74436F6E 
 3115      64697469 
 3115      6F6E4D65 
 3115      7400
 3116              	.LASF24:
 3117 0125 70764F77 		.ascii	"pvOwner\000"
 3117      6E657200 
 3118              	.LASF52:
 3119 012d 78546963 		.ascii	"xTicksToWait\000"
 3119      6B73546F 
 3119      57616974 
 3119      00
 3120              	.LASF35:
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 75


 3121 013a 4576656E 		.ascii	"EventGroupHandle_t\000"
 3121      7447726F 
 3121      75704861 
 3121      6E646C65 
 3121      5F7400
 3122              	.LASF92:
 3123 014d 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3123      72745261 
 3123      69736542 
 3123      41534550 
 3123      524900
 3124              	.LASF66:
 3125 0160 75784269 		.ascii	"uxBitsWaitedFor\000"
 3125      74735761 
 3125      69746564 
 3125      466F7200 
 3126              	.LASF71:
 3127 0170 76457665 		.ascii	"vEventGroupDelete\000"
 3127      6E744772 
 3127      6F757044 
 3127      656C6574 
 3127      6500
 3128              	.LASF16:
 3129 0182 666C6F61 		.ascii	"float\000"
 3129      7400
 3130              	.LASF44:
 3131 0188 75784269 		.ascii	"uxBitsToWaitFor\000"
 3131      7473546F 
 3131      57616974 
 3131      466F7200 
 3132              	.LASF34:
 3133 0198 4C697374 		.ascii	"List_t\000"
 3133      5F7400
 3134              	.LASF33:
 3135 019f 4D696E69 		.ascii	"MiniListItem_t\000"
 3135      4C697374 
 3135      4974656D 
 3135      5F7400
 3136              	.LASF1:
 3137 01ae 6C6F6E67 		.ascii	"long long int\000"
 3137      206C6F6E 
 3137      6720696E 
 3137      7400
 3138              	.LASF75:
 3139 01bc 76457665 		.ascii	"vEventGroupClearBitsCallback\000"
 3139      6E744772 
 3139      6F757043 
 3139      6C656172 
 3139      42697473 
 3140              	.LASF65:
 3141 01d9 70784C69 		.ascii	"pxList\000"
 3141      737400
 3142              	.LASF7:
 3143 01e0 6C6F6E67 		.ascii	"long int\000"
 3143      20696E74 
 3143      00
 3144              	.LASF27:
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 76


 3145 01e9 784C4953 		.ascii	"xLIST\000"
 3145      5400
 3146              	.LASF63:
 3147 01ef 70784C69 		.ascii	"pxListItem\000"
 3147      73744974 
 3147      656D00
 3148              	.LASF21:
 3149 01fa 78497465 		.ascii	"xItemValue\000"
 3149      6D56616C 
 3149      756500
 3150              	.LASF74:
 3151 0205 756C4269 		.ascii	"ulBitsToSet\000"
 3151      7473546F 
 3151      53657400 
 3152              	.LASF38:
 3153 0211 78546173 		.ascii	"xTasksWaitingForBits\000"
 3153      6B735761 
 3153      6974696E 
 3153      67466F72 
 3153      42697473 
 3154              	.LASF68:
 3155 0226 78457665 		.ascii	"xEventGroupSync\000"
 3155      6E744772 
 3155      6F757053 
 3155      796E6300 
 3156              	.LASF26:
 3157 0236 784C4953 		.ascii	"xLIST_ITEM\000"
 3157      545F4954 
 3157      454D00
 3158              	.LASF57:
 3159 0241 78457665 		.ascii	"xEventGroupClearBits\000"
 3159      6E744772 
 3159      6F757043 
 3159      6C656172 
 3159      42697473 
 3160              	.LASF20:
 3161 0256 5469636B 		.ascii	"TickType_t\000"
 3161      54797065 
 3161      5F7400
 3162              	.LASF2:
 3163 0261 6C6F6E67 		.ascii	"long double\000"
 3163      20646F75 
 3163      626C6500 
 3164              	.LASF4:
 3165 026d 756E7369 		.ascii	"unsigned char\000"
 3165      676E6564 
 3165      20636861 
 3165      7200
 3166              	.LASF41:
 3167 027b 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3167      6967696E 
 3167      616C4241 
 3167      53455052 
 3167      4900
 3168              	.LASF3:
 3169 028d 7369676E 		.ascii	"signed char\000"
 3169      65642063 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 77


 3169      68617200 
 3170              	.LASF14:
 3171 0299 696E7433 		.ascii	"int32_t\000"
 3171      325F7400 
 3172              	.LASF11:
 3173 02a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 3173      206C6F6E 
 3173      6720756E 
 3173      7369676E 
 3173      65642069 
 3174              	.LASF88:
 3175 02b8 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\event_groups.c\000"
 3175      72656552 
 3175      544F535C 
 3175      536F7572 
 3175      63655C65 
 3176              	.LASF15:
 3177 02da 75696E74 		.ascii	"uint32_t\000"
 3177      33325F74 
 3177      00
 3178              	.LASF73:
 3179 02e3 70764576 		.ascii	"pvEventGroup\000"
 3179      656E7447 
 3179      726F7570 
 3179      00
 3180              	.LASF0:
 3181 02f0 756E7369 		.ascii	"unsigned int\000"
 3181      676E6564 
 3181      20696E74 
 3181      00
 3182              	.LASF31:
 3183 02fd 4C697374 		.ascii	"ListItem_t\000"
 3183      4974656D 
 3183      5F7400
 3184              	.LASF18:
 3185 0308 42617365 		.ascii	"BaseType_t\000"
 3185      54797065 
 3185      5F7400
 3186              	.LASF25:
 3187 0313 7076436F 		.ascii	"pvContainer\000"
 3187      6E746169 
 3187      6E657200 
 3188              	.LASF49:
 3189 031f 78457665 		.ascii	"xEventGroupWaitBits\000"
 3189      6E744772 
 3189      6F757057 
 3189      61697442 
 3189      69747300 
 3190              	.LASF81:
 3191 0333 78546173 		.ascii	"xTaskResumeAll\000"
 3191      6B526573 
 3191      756D6541 
 3191      6C6C00
 3192              	.LASF6:
 3193 0342 73686F72 		.ascii	"short unsigned int\000"
 3193      7420756E 
 3193      7369676E 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 78


 3193      65642069 
 3193      6E7400
 3194              	.LASF83:
 3195 0355 76506F72 		.ascii	"vPortEnterCritical\000"
 3195      74456E74 
 3195      65724372 
 3195      69746963 
 3195      616C00
 3196              	.LASF93:
 3197 0368 70727654 		.ascii	"prvTestWaitCondition\000"
 3197      65737457 
 3197      61697443 
 3197      6F6E6469 
 3197      74696F6E 
 3198              	.LASF90:
 3199 037d 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3199      74536574 
 3199      42415345 
 3199      50524900 
 3200              	.LASF13:
 3201 038d 63686172 		.ascii	"char\000"
 3201      00
 3202              	.LASF94:
 3203 0392 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3203      52784275 
 3203      66666572 
 3203      00
 3204              	.LASF22:
 3205 039f 70784E65 		.ascii	"pxNext\000"
 3205      787400
 3206              	.LASF69:
 3207 03a6 75784F72 		.ascii	"uxOriginalBitValue\000"
 3207      6967696E 
 3207      616C4269 
 3207      7456616C 
 3207      756500
 3208              	.LASF37:
 3209 03b9 75784576 		.ascii	"uxEventBits\000"
 3209      656E7442 
 3209      69747300 
 3210              	.LASF84:
 3211 03c5 76506F72 		.ascii	"vPortExitCritical\000"
 3211      74457869 
 3211      74437269 
 3211      74696361 
 3211      6C00
 3212              	.LASF36:
 3213 03d7 4576656E 		.ascii	"EventGroupDef_t\000"
 3213      7447726F 
 3213      75704465 
 3213      665F7400 
 3214              	.LASF54:
 3215 03e7 7578436F 		.ascii	"uxControlBits\000"
 3215      6E74726F 
 3215      6C426974 
 3215      7300
 3216              	.LASF59:
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 79


 3217 03f5 78457665 		.ascii	"xEventGroupGetBitsFromISR\000"
 3217      6E744772 
 3217      6F757047 
 3217      65744269 
 3217      74734672 
 3218              	.LASF61:
 3219 040f 78457665 		.ascii	"xEventGroupSetBits\000"
 3219      6E744772 
 3219      6F757053 
 3219      65744269 
 3219      747300
 3220              	.LASF53:
 3221 0422 75785265 		.ascii	"uxReturn\000"
 3221      7475726E 
 3221      00
 3222              	.LASF10:
 3223 042b 6C6F6E67 		.ascii	"long unsigned int\000"
 3223      20756E73 
 3223      69676E65 
 3223      6420696E 
 3223      7400
 3224              	.LASF19:
 3225 043d 55426173 		.ascii	"UBaseType_t\000"
 3225      65547970 
 3225      655F7400 
 3226              	.LASF91:
 3227 0449 756C4E65 		.ascii	"ulNewMaskValue\000"
 3227      774D6173 
 3227      6B56616C 
 3227      756500
 3228              	.LASF86:
 3229 0458 76506F72 		.ascii	"vPortFree\000"
 3229      74467265 
 3229      6500
 3230              	.LASF28:
 3231 0462 75784E75 		.ascii	"uxNumberOfItems\000"
 3231      6D626572 
 3231      4F664974 
 3231      656D7300 
 3232              	.LASF82:
 3233 0472 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 3233      736B5265 
 3233      73657445 
 3233      76656E74 
 3233      4974656D 
 3234              	.LASF8:
 3235 048c 5F5F696E 		.ascii	"__int32_t\000"
 3235      7433325F 
 3235      7400
 3236              	.LASF60:
 3237 0496 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3237      76656449 
 3237      6E746572 
 3237      72757074 
 3237      53746174 
 3238              	.LASF12:
 3239 04ad 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 80


 3239      74797065 
 3239      00
 3240              	.LASF67:
 3241 04b6 784D6174 		.ascii	"xMatchFound\000"
 3241      6368466F 
 3241      756E6400 
 3242              	.LASF50:
 3243 04c2 78457665 		.ascii	"xEventGroup\000"
 3243      6E744772 
 3243      6F757000 
 3244              	.LASF58:
 3245 04ce 75784269 		.ascii	"uxBitsToClear\000"
 3245      7473546F 
 3245      436C6561 
 3245      7200
 3246              	.LASF17:
 3247 04dc 646F7562 		.ascii	"double\000"
 3247      6C6500
 3248              	.LASF47:
 3249 04e3 70784576 		.ascii	"pxEventBits\000"
 3249      656E7442 
 3249      69747300 
 3250              	.LASF29:
 3251 04ef 7078496E 		.ascii	"pxIndex\000"
 3251      64657800 
 3252              	.LASF56:
 3253 04f7 7854696D 		.ascii	"xTimeoutOccurred\000"
 3253      656F7574 
 3253      4F636375 
 3253      72726564 
 3253      00
 3254              	.LASF87:
 3255 0508 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3255      43313120 
 3255      352E342E 
 3255      31203230 
 3255      31363036 
 3256 053b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3256      20726576 
 3256      6973696F 
 3256      6E203233 
 3256      37373135 
 3257 056e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3257      66756E63 
 3257      74696F6E 
 3257      2D736563 
 3257      74696F6E 
 3258              	.LASF72:
 3259 0596 76457665 		.ascii	"vEventGroupSetBitsCallback\000"
 3259      6E744772 
 3259      6F757053 
 3259      65744269 
 3259      74734361 
 3260              	.LASF32:
 3261 05b1 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 3261      495F4C49 
 3261      53545F49 
ARM GAS  C:\Users\kuria\AppData\Local\Temp\cc8WEpyW.s 			page 81


 3261      54454D00 
 3262              	.LASF43:
 3263 05c1 75784375 		.ascii	"uxCurrentEventBits\000"
 3263      7272656E 
 3263      74457665 
 3263      6E744269 
 3263      747300
 3264              	.LASF77:
 3265 05d4 7076506F 		.ascii	"pvPortMalloc\000"
 3265      72744D61 
 3265      6C6C6F63 
 3265      00
 3266              	.LASF70:
 3267 05e1 70785461 		.ascii	"pxTasksWaitingForBits\000"
 3267      736B7357 
 3267      61697469 
 3267      6E67466F 
 3267      72426974 
 3268              	.LASF80:
 3269 05f7 76546173 		.ascii	"vTaskSuspendAll\000"
 3269      6B537573 
 3269      70656E64 
 3269      416C6C00 
 3270              	.LASF55:
 3271 0607 78416C72 		.ascii	"xAlreadyYielded\000"
 3271      65616479 
 3271      5969656C 
 3271      64656400 
 3272              	.LASF62:
 3273 0617 75784269 		.ascii	"uxBitsToSet\000"
 3273      7473546F 
 3273      53657400 
 3274              	.LASF76:
 3275 0623 756C4269 		.ascii	"ulBitsToClear\000"
 3275      7473546F 
 3275      436C6561 
 3275      7200
 3276              	.LASF40:
 3277 0631 4576656E 		.ascii	"EventGroup_t\000"
 3277      7447726F 
 3277      75705F74 
 3277      00
 3278              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
